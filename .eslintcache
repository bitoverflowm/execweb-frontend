[{"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\index.js":"1","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorAuth.js":"2","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\components\\SponsorshipRequests.js":"3","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\pages\\AdminDashboard.js":"4","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\Home.js":"5","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Navigation\\MainNavigation.js":"6","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\App.js":"7","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Navigation\\NavLinks.js":"8","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\pages\\sponsorHome.js":"9","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\components\\SponsorshipRequestDetails.js":"10","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\reportWebVitals.js":"11","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetRole.js":"12","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetIndustry.js":"13","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetHeadCount.js":"14","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetRegion.js":"15","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetUsers.js":"16","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetDate.js":"17","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetHost.js":"18","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetTopic.js":"19","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\pages\\SponsorRequest.js":"20"},{"size":513,"mtime":1613449167551,"results":"21","hashOfConfig":"22"},{"size":1858,"mtime":1613448878881,"results":"23","hashOfConfig":"22"},{"size":1786,"mtime":1612221303634,"results":"24","hashOfConfig":"22"},{"size":1879,"mtime":1612222265721,"results":"25","hashOfConfig":"22"},{"size":401,"mtime":1612160680320,"results":"26","hashOfConfig":"22"},{"size":386,"mtime":1612170812349,"results":"27","hashOfConfig":"22"},{"size":2503,"mtime":1613460622527,"results":"28","hashOfConfig":"22"},{"size":805,"mtime":1612217129714,"results":"29","hashOfConfig":"22"},{"size":1168,"mtime":1613120765866,"results":"30","hashOfConfig":"22"},{"size":1834,"mtime":1612225405328,"results":"31","hashOfConfig":"22"},{"size":362,"mtime":1611762160796,"results":"32","hashOfConfig":"22"},{"size":2144,"mtime":1612948177196,"results":"33","hashOfConfig":"22"},{"size":2311,"mtime":1612949728306,"results":"34","hashOfConfig":"22"},{"size":2622,"mtime":1612949741858,"results":"35","hashOfConfig":"22"},{"size":2594,"mtime":1612949959427,"results":"36","hashOfConfig":"22"},{"size":4745,"mtime":1613118837519,"results":"37","hashOfConfig":"22"},{"size":1769,"mtime":1612950425787,"results":"38","hashOfConfig":"22"},{"size":1833,"mtime":1612950621354,"results":"39","hashOfConfig":"22"},{"size":1799,"mtime":1612950715705,"results":"40","hashOfConfig":"22"},{"size":7215,"mtime":1613118805871,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"wdh0zt",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\index.js",[],["87","88"],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorAuth.js",["89"],"import React, { useReducer, useEffect } from 'react';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nimport { Button, Typography } from 'antd';\r\n\r\nconst { Text } = Typography;\r\n\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: action.val.username,\r\n                isValid: true\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nconst SponsorAuth = props => {\r\n    \r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '', \r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, isValid } = inputState;\r\n    const { loginWithRedirect } = useAuth0();\r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid)\r\n    }, [id, value, isValid, formUpdateHandler]);\r\n\r\n    const clickHandler = submission => {\r\n        console.log('Submitted Value', submission);\r\n        \r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: submission\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className = 'response-field'>\r\n            <p>Let's start by getting to know each other</p>\r\n            <p>We care deeply about our memeber's experience and privacy.</p>\r\n            <p>As part of this, we verify every member's professional identity.</p>\r\n            <p>Connect your LinkedIn to begin!</p>\r\n            {console.log('props value in linked validation: ', props.value)}\r\n            {props.value.isValid \r\n                ? <Text>Welcome {inputState.value} thank you for joining our community!</Text> \r\n                : <Button type=\"primary\" onClick={() => loginWithRedirect()/*clickHandler({username : \"John Doe\"})*/}> Connect to LinkedIn</Button>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SponsorAuth;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\components\\SponsorshipRequests.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\pages\\AdminDashboard.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\Home.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Navigation\\MainNavigation.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\App.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Navigation\\NavLinks.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\pages\\sponsorHome.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\components\\SponsorshipRequestDetails.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetRole.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetIndustry.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetHeadCount.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetRegion.js",[],["90","91"],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetUsers.js",["92","93"],"import React, { useReducer, useEffect, useState } from 'react';\r\n\r\nimport '../../index.css';\r\n\r\nimport { Checkbox, Row, Col, Typography, Avatar, Spin } from 'antd';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst DUMMY_USER_DATA = [\r\n    {\r\n        id: '1',\r\n        first_name: 'Sterling',\r\n        last_name: 'Archer',\r\n        position: 'Spy',\r\n        company: 'Figgis Agency',\r\n        avatar: 'https://pbs.twimg.com/profile_images/473693408649674753/Fjo74UD2.png'\r\n    },\r\n    {\r\n        id: '2',\r\n        first_name: 'Bob',\r\n        last_name: 'Burger',\r\n        position: 'Burger Maker',\r\n        company: 'Bobs Burger',\r\n        avatar: 'https://www.gannett-cdn.com/presto/2020/06/12/PPHX/e7207da9-6fbe-467b-b63e-ac44e95db582-BobsBurgers_2019_KeyPoses_Bob_1.jpg?crop=3356,1888,x0,y480&width=3200&height=1801&format=pjpg&auto=webp'\r\n    },\r\n    {\r\n        id: '3',\r\n        first_name: 'Kristin',\r\n        last_name: 'Watson',\r\n        position: 'Project Manager',\r\n        company: 'Heinemann',\r\n        avatar: 'https://pbs.twimg.com/profile_images/473693408649674753/Fjo74UD2.png'\r\n    }\r\n]; \r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: true\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst SponsorTargetUsers = props => {\r\n    \r\n    const searchParams = props.value;\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [filteredUsers, setFilteredUsers] = useState();\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            setIsLoading(true);\r\n            try\r\n            {\r\n                console.log(\"searching on the following params: \",  searchParams);\r\n                const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/sponsors/userSearch', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type' : 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        jobTitles  : searchParams.roles.value,\r\n                        industries : searchParams.industries.value,\r\n                    })\r\n                });\r\n\r\n                const responseData = await response.json();\r\n\r\n                if(!response.ok){\r\n                    throw new Error(responseData.message);\r\n                }\r\n\r\n                console.log('Filtered users:', responseData)\r\n                setFilteredUsers(responseData.filteredUsers);\r\n                setIsLoading(false);\r\n            } catch (err) {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        sendRequest();\r\n    }, []);\r\n\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '', \r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid)\r\n    }, [id, value, isValid, formUpdateHandler]);\r\n\r\n    const clickHandler = checkedValues => {\r\n        console.log('Selected value', checkedValues);\r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: checkedValues\r\n        });\r\n    };\r\n\r\n    return(\r\n        <div className = 'response-field'> \r\n            <p>\r\n                <Text>We recommend the following professionals based on your responses.</Text>\r\n                <br></br>\r\n                <Text keyboard> Select who you would like to attend.</Text>\r\n            </p>\r\n                \r\n            <Row>\r\n                {!isLoading && filteredUsers\r\n                    ? (\r\n                        <Checkbox.Group onChange={clickHandler} style={{width : '100%'}}>\r\n                            {filteredUsers.map( user => (\r\n                                <Col span={24} key={user.item[\"_id\"]} className=\"check-box\">\r\n                                    <Checkbox value={user.item[\"_id\"]}>\r\n                                        <Avatar src={user.item[\"Personal Photo\"]}/>                                \r\n                                        <Text strong>{\" \" + user.item[\"First Name\"] + \" \" + user.item[\"Last Name\"]}</Text> \r\n                                        <Text>{\" \" + user.item.Position + \" @\" + user.item.Company}</Text>\r\n                                    </Checkbox>\r\n                                </Col>\r\n                            ))}\r\n                        </Checkbox.Group>\r\n                    )\r\n                    : (\r\n                        <Spin />\r\n                    )\r\n                }\r\n            </Row>\r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default SponsorTargetUsers;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetDate.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetHost.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetTopic.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\pages\\SponsorRequest.js",["94"],"import React, { useState, useReducer, useCallback } from 'react';\r\n\r\nimport { Form, Steps, Button, message } from 'antd';\r\n\r\nimport SponsorAuth from '../components/SponsorAuth';\r\nimport SponsorTargetRole from '../components/SponsorTargetRole';\r\nimport SponsorTargetIndustry from '../components/SponsorTargetIndustry';\r\nimport SponsorTargetHeadCount from '../components/SponsorTargetHeadCount';\r\nimport SponsorTargetRegion from '../components/SponsorTargetRegion';\r\nimport SponsorTargetUsers from '../components/SponsorTargetUsers';\r\nimport SponsorTargetDate from '../components/SponsorTargetDate';\r\nimport SponsorTargetTopic from '../components/SponsorTargetTopic';\r\nimport SponsorTargetHost from '../components/SponsorTargetHost';\r\n\r\nimport '../../index.css';\r\n\r\nconst { Step } = Steps;\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'SELECT':\r\n            let formIsValid = true;\r\n            /*for (const inputId in state.inputs){\r\n                if(inputId === action.inputId){\r\n                    formIsValid = formIsValid && action.isValid;\r\n                }\r\n                TODO: Add form validation logic here;\r\n            }*/\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId] : { value: action.value, isValid: action.isValid }\r\n                },\r\n                isValid: formIsValid\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst SponsorRequest = () => {\r\n\r\n    const [current, setCurrent] = useState(0);\r\n\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n            inputs: {\r\n                username: { value: '', isValid: false},\r\n                roles: { value: '', isValid: false},\r\n                industries: { value: '', isValid: false}\r\n            }, isValid: false});\r\n\r\n    const formUpdateHandler = useCallback(( id, value, isValid ) => { \r\n        console.log(`formUpdateHandler id: ${id} value: ${value} isValid: ${isValid}`);\r\n        dispatch({type: 'SELECT', value: value, inputId: id, isValid: isValid});\r\n    }, []);\r\n\r\n    const steps = [\r\n        { \r\n            title: 'Step 1', \r\n            content: \r\n            <SponsorAuth \r\n                id=\"username\"\r\n                formUpdateHandler={formUpdateHandler} \r\n                value={formState.inputs.username}/> \r\n        },\r\n        { \r\n            title: 'Step 2', \r\n            content: \r\n            <SponsorTargetRole\r\n                id=\"roles\"\r\n                formUpdateHandler={formUpdateHandler}\r\n                value={formState.inputs.roles}/> \r\n        },\r\n        { \r\n            title: 'Step 3', \r\n            content: \r\n            <SponsorTargetIndustry \r\n                id=\"industries\"\r\n                formUpdateHandler={formUpdateHandler}\r\n                value={formState.inputs.industries}/> \r\n        },\r\n        { \r\n            title: 'Step 4', \r\n            content: \r\n            <SponsorTargetHeadCount \r\n                id=\"headCounts\"\r\n                formUpdateHandler={formUpdateHandler}\r\n                value={formState.inputs.headCounts}/> \r\n        },\r\n        { \r\n            title: 'Step 5', \r\n            content: \r\n            <SponsorTargetRegion\r\n                id=\"regions\"\r\n                formUpdateHandler={formUpdateHandler}\r\n                value={formState.inputs.regions}/>\r\n        },\r\n        { \r\n            title: 'Step 6', \r\n            content: \r\n            <SponsorTargetUsers \r\n                id=\"users\"\r\n                formUpdateHandler={formUpdateHandler}\r\n                value={formState.inputs}/>\r\n        },\r\n        { \r\n            title: 'Step 7', \r\n            content: \r\n            <SponsorTargetDate \r\n                id=\"dates\"\r\n                formUpdateHandler={formUpdateHandler}\r\n                value={formState.inputs.dates}/>\r\n        },\r\n        { \r\n            title: 'Step 8', \r\n            content: \r\n            <SponsorTargetTopic \r\n                id=\"topic\"\r\n                formUpdateHandler={formUpdateHandler}\r\n                value={formState.inputs.topic}/>\r\n        },\r\n        { \r\n            title: 'Step 9', \r\n            content: \r\n            <SponsorTargetHost \r\n                id=\"host\"\r\n                formUpdateHandler={formUpdateHandler}\r\n                value={formState.inputs.host}/>\r\n        },\r\n    ];\r\n\r\n    const next = () => {\r\n        setCurrent(current + 1);\r\n        console.log(\"triggering next: current formState: \", formState);\r\n    };\r\n\r\n    // Prev is currently disabled as it jsut complicated the state management\r\n    const prev = () => {\r\n        setCurrent(current - 1);\r\n    };\r\n\r\n    const onFinish = async event => {\r\n        console.log('Submitting completed form: ', formState);\r\n\r\n        try {\r\n            const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/sponsors/sponsorRequest', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type' : 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    jobTitles  : formState.inputs.roles.value,\r\n                    industries : formState.inputs.industries.value, \r\n                    clientList : 'text.csv',\r\n                    headCounts : formState.inputs.headCounts.value,\r\n                    regions    : formState.inputs.regions.value,\r\n                    users      : formState.inputs.users.value,\r\n                    dateStart  : formState.inputs.dates.value[0],\r\n                    dateEnd    : formState.inputs.dates.value[1],\r\n                    topic      : formState.inputs.topic.value[0],\r\n                    host       : formState.inputs.host.value[0],\r\n                    sponsor    : 1,\r\n                })\r\n            });\r\n            \r\n            const responseData = await response.json();\r\n            console.log('Server response: ', responseData);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }       \r\n        \r\n      };\r\n\r\n    return (\r\n        <Form className = \"site-layout-content\" onFinish={onFinish}>\r\n            <Steps current={current}>\r\n                {steps.map(item => (\r\n                    <Step key={item.title} hidden />\r\n                ))}\r\n            </Steps>\r\n            \r\n            <div className=\"response-field\">\r\n                {steps[current].content}\r\n            </div>\r\n            \r\n            <div className=\"response-action\">\r\n                {current < steps.length - 1 && (\r\n                    <Button type=\"primary\" onClick={() => next()}>\r\n                        Next\r\n                    </Button>\r\n                )}\r\n                {/*current > 0 && (\r\n                    <Button onClick={() => prev()}>\r\n                        Previous\r\n                    </Button>\r\n                )*/}                \r\n                {current === steps.length - 1 && (\r\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={() => message.success('Processing complete!')}>\r\n                        Done\r\n                    </Button>\r\n                )}\r\n            </div>\r\n        </Form>\r\n    )\r\n};\r\n\r\nexport default SponsorRequest;",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":38,"column":11,"nodeType":"101","messageId":"102","endLine":38,"endColumn":23},{"ruleId":"95","replacedBy":"103"},{"ruleId":"97","replacedBy":"104"},{"ruleId":"99","severity":1,"message":"105","line":9,"column":7,"nodeType":"101","messageId":"102","endLine":9,"endColumn":22},{"ruleId":"106","severity":1,"message":"107","line":86,"column":8,"nodeType":"108","endLine":86,"endColumn":10,"suggestions":"109"},{"ruleId":"99","severity":1,"message":"110","line":139,"column":11,"nodeType":"101","messageId":"102","endLine":139,"endColumn":15},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'clickHandler' is assigned a value but never used.","Identifier","unusedVar",["111"],["112"],"'DUMMY_USER_DATA' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchParams'. Either include it or remove the dependency array.","ArrayExpression",["113"],"'prev' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [searchParams]",{"range":"116","text":"117"},[2757,2759],"[searchParams]"]