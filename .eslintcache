[{"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\index.js":"1","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorAuth.js":"2","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\components\\SponsorshipRequests.js":"3","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\pages\\AdminDashboard.js":"4","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\Home.js":"5","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Navigation\\MainNavigation.js":"6","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\App.js":"7","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Navigation\\NavLinks.js":"8","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\pages\\sponsorHome.js":"9","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\components\\SponsorshipRequestDetails.js":"10","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\reportWebVitals.js":"11","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetRole.js":"12","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetIndustry.js":"13","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetHeadCount.js":"14","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetRegion.js":"15","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetDate.js":"16","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetHost.js":"17","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetTopic.js":"18","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\pages\\SponsorRequest.js":"19","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Auth\\Profile.js":"20","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetUsersList.js":"21","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorSummary.js":"22"},{"size":532,"mtime":1613524438019,"results":"23","hashOfConfig":"24"},{"size":2263,"mtime":1614324080855,"results":"25","hashOfConfig":"24"},{"size":1786,"mtime":1612221303634,"results":"26","hashOfConfig":"24"},{"size":1879,"mtime":1612222265721,"results":"27","hashOfConfig":"24"},{"size":3659,"mtime":1614357916259,"results":"28","hashOfConfig":"24"},{"size":344,"mtime":1613999699360,"results":"29","hashOfConfig":"24"},{"size":2501,"mtime":1613684685775,"results":"30","hashOfConfig":"24"},{"size":938,"mtime":1614297969571,"results":"31","hashOfConfig":"24"},{"size":302,"mtime":1613735733091,"results":"32","hashOfConfig":"24"},{"size":1834,"mtime":1612225405328,"results":"33","hashOfConfig":"24"},{"size":362,"mtime":1611762160796,"results":"34","hashOfConfig":"24"},{"size":3262,"mtime":1614240379197,"results":"35","hashOfConfig":"24"},{"size":5107,"mtime":1614292662498,"results":"36","hashOfConfig":"24"},{"size":2628,"mtime":1613991964009,"results":"37","hashOfConfig":"24"},{"size":2610,"mtime":1613992396157,"results":"38","hashOfConfig":"24"},{"size":3593,"mtime":1614357097128,"results":"39","hashOfConfig":"24"},{"size":1826,"mtime":1614298406277,"results":"40","hashOfConfig":"24"},{"size":2404,"mtime":1613997853236,"results":"41","hashOfConfig":"24"},{"size":11073,"mtime":1614321257455,"results":"42","hashOfConfig":"24"},{"size":519,"mtime":1614000813437,"results":"43","hashOfConfig":"24"},{"size":8019,"mtime":1614322089096,"results":"44","hashOfConfig":"24"},{"size":1551,"mtime":1614000807456,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"wdh0zt",{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"99","usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\index.js",[],["102","103"],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorAuth.js",["104","105","106"],"import React, { useReducer, useEffect } from 'react';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nimport { Button, Typography } from 'antd';\r\n\r\nimport { LinkedinOutlined } from '@ant-design/icons';\r\n\r\nimport Profile from '../../shared/components/Auth/Profile';\r\n\r\nconst { Text } = Typography;\r\n\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: true\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nconst SponsorAuth = props => {\r\n    \r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '', \r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, isValid } = inputState;\r\n    const { loginWithRedirect, user, isAuthenticated, isLoading } = useAuth0();\r\n    \r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid)\r\n    }, [id, value, isValid, formUpdateHandler]);\r\n\r\n    const clickHandler = submission => {\r\n        console.log('Submitted Value', submission);\r\n        loginWithRedirect();   \r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: user\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className = 'response-field'>\r\n            <p>We will facilitate virtual roundtables with 5-10 tech execs in your target market who are actively looking for new vendors.</p>\r\n            <p>You will need to answer a few questions, takes less than 2 minutes to complete, so that we know who are the most relevant tech executives to you.</p>\r\n            <p>You will need to join using your LinkedIn account since we are an exclusive professional platform and need to confirm everyone's professional identity.</p>\r\n            <p>Let's begin... </p>\r\n            {console.log('props value in linked validation: ', props.value)}\r\n            <div className= \"linkedin-auth-wrapper\">\r\n                {isAuthenticated \r\n                    ? <Profile />\r\n                    : <Button type=\"primary\" className=\"linkedin-auth\" onClick={() => clickHandler()}>  Connect to LinkedIn</Button>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SponsorAuth;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\components\\SponsorshipRequests.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\pages\\AdminDashboard.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\Home.js",["107","108","109","110","111"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFacebook, faTwitter } from '@fortawesome/free-brands-svg-icons';\r\n\r\nimport { Layout, Row, Col, Typography } from 'antd';\r\nimport { Content, Footer} from 'antd/lib/layout/layout';\r\n\r\nimport jumboBig from './shared/assets/jumbo-home/jumbo-main.jpg';\r\nimport howItWorks from './shared/assets/jumbo-home/how-it-works.jpg';\r\nimport homeWhy from './shared/assets/jumbo-home/home-why.jpg';\r\nimport logo from './shared/assets/logo2.png';\r\n\r\nimport './index.css';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Home = () => {\r\n    return(\r\n        <React.Fragment>\r\n            <Layout>\r\n                <Content className=\"home-jumbo-content\">\r\n                    <img src={jumboBig} />\r\n                    <Row style={{paddingBottom : '10px', marginTop: '-15px'}} >\r\n                        <Link to={`/sponsorHome/`} className=\"home-call-to-action\">\r\n                            <a className=\"button-execweb-brand\"> Get in front of relevant executives </a>\r\n                        </Link>\r\n                    </Row>\r\n                    <Row>\r\n                        <img src={howItWorks} className=\"home-about-content\"/>\r\n                    </Row>\r\n                    <Row className=\"home-why-content-wrapper\">\r\n                        <img src={homeWhy} className=\"home-why-content\"/>\r\n                    </Row>                    \r\n                </Content>\r\n                <Footer className=\"home-footer\" style={{background : '#fff'}}>\r\n                    <Row>\r\n                        <Col xs={24} xl={8}>\r\n                            <div className=\"home-footer-wrapper\">\r\n                                <img src={logo} alt=\"Logo\" className=\"home-footer-logo\"/>\r\n                            </div>                            \r\n                        </Col>\r\n                        <Col xs={24} xl={4} className=\"home-footer-col-wrapper\">\r\n                            <Row className=\"home-footer-headers\">Resources</Row>\r\n                            <Row className=\"home-footer-links\"><a href=\"mailto:support@execweb.com\">Support</a></Row>\r\n                            <Row className=\"home-footer-links\"><a href=\"https://www.introeq.com/\">Community</a></Row>\r\n                            <Row>Privacy</Row>\r\n                            <Row>Terms</Row>\r\n                            <Row>Data processing</Row>\r\n                        </Col>\r\n                        <Col xs={24} xl={4} className=\"home-footer-col-wrapper\">\r\n                            <Row className=\"home-footer-headers\">Connect With Us</Row>\r\n                            <Row className=\"home-footer-links\"><a href=\"https://www.facebook.com/introeq\"><FontAwesomeIcon className=\"home-footer-icon\" icon={faFacebook} size=\"lg\"/> Facebook</a></Row>\r\n                            <Row className=\"home-footer-links\"><a href=\"https://twitter.com/IntroEQ\"><FontAwesomeIcon className=\"home-footer-icon\" icon={faTwitter} size=\"lg\"/>Twitter</a></Row>\r\n                        </Col>\r\n                        <Col xs={24} xl={8} className=\"home-footer-col-wrapper\">\r\n                            <Row className=\"home-footer-headers\">Need Help?</Row>\r\n                            <Row>Let us know if you have any questions or comments and our customer success team will get back to you as soon as possible.</Row>\r\n                            <Row>support@introeq.com</Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Footer>\r\n            </Layout>\r\n        </React.Fragment>\r\n        );\r\n};\r\n\r\nexport default Home;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Navigation\\MainNavigation.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\App.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Navigation\\NavLinks.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\pages\\sponsorHome.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\components\\SponsorshipRequestDetails.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetRole.js",["112"],"import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { Checkbox, Row, Col, Input, message } from 'antd';\r\n\r\nimport '../../index.css';\r\n\r\nconst { Search } = Input;\r\n\r\n\r\nconst DUMMY_JOB_TITLE = [\r\n    {\r\n        id: 'j1',\r\n        title: 'Chief Information Officer'\r\n    },\r\n    {\r\n        id: 'j2',\r\n        title: 'Chief Executive Officer'\r\n    },\r\n    {\r\n        id: 'j3',\r\n        title: 'Chief Technology Officer'\r\n    },\r\n    {\r\n        id: 'j4',\r\n        title: 'Chief Operations Officer'\r\n    },\r\n    {\r\n        id: 'j5',\r\n        title: 'Software Developer'\r\n    },\r\n    {\r\n        id: 'j6',\r\n        title: 'Chief Information Security Officer'\r\n    },\r\n    {\r\n        id: 'j7',\r\n        title: 'Chief Data Officer'\r\n    },\r\n    {\r\n        id: 'j8',\r\n        title: 'Chief Compliance Officer'\r\n    },\r\n    {\r\n        id: 'j9',\r\n        title: 'Chief Product Officer'\r\n    },\r\n    {\r\n        id: 'j10',\r\n        title: 'Director of Sales '\r\n    }\r\n];\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: true\r\n            };\r\n        case 'TEXT':\r\n            return {\r\n                ...state,\r\n                textinput: action.val,\r\n                isValid: true \r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst SponsorTargetRole = props => {\r\n\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '',\r\n        textinput: '',\r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, textinput, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid, textinput)\r\n    }, [id, value, textinput, isValid, formUpdateHandler]);\r\n\r\n    const clickHandler = checkedValues => {\r\n        console.log('Selected value', checkedValues);\r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: checkedValues\r\n        });\r\n    };\r\n\r\n    const onTextSubmission = value => {\r\n        console.log('newPosition text Entry', value);\r\n\r\n        dispatch({\r\n            type: 'TEXT',\r\n            val: value\r\n        });\r\n        message.success(value + ' Added to your submission!');\r\n    }\r\n\r\n\r\n    return(\r\n        <div className = 'response-field'>\r\n            <Row>\r\n                <Checkbox.Group onChange={clickHandler} className=\"check-box-wrapper\">\r\n                    <p>What are the job titles of your target clients?</p>\r\n                    {DUMMY_JOB_TITLE.map( title => (\r\n                            <div key={title.id} className=\"check-box-jobs\">\r\n                                <Checkbox key={title.id} value={title.title}>\r\n                                    {title.title}\r\n                                </Checkbox>\r\n                            </div>\r\n                    ))}\r\n                </Checkbox.Group>\r\n            </Row>\r\n            <Row className= 'other-input'>\r\n                <p>Other:</p>\r\n                <Search placeholder=\"Enter job title here\" allowClear enterButton=\"+\" onSearch={onTextSubmission} />\r\n            </Row>\r\n            \r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default SponsorTargetRole;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetIndustry.js",["113"],"import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { Checkbox, Row, Col, Input, message } from 'antd';\r\n\r\nimport { FireTwoTone, ExperimentTwoTone, CodeTwoTone, BankTwoTone, LikeTwoTone, HeartTwoTone, RocketTwoTone, BookTwoTone, CarTwoTone, FilterTwoTone, FileExclamationTwoTone, MedicineBoxTwoTone } from '@ant-design/icons';\r\n\r\nimport '../../index.css';\r\n\r\nconst { Search } = Input;\r\n\r\nconst DUMMY_INDUSTRIES = [\r\n    {\r\n        id: 'i1',\r\n        title: 'Financial Services',\r\n        icon: <BankTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#FFB454\"/>\r\n    },\r\n    {\r\n        id: 'i2',\r\n        title: 'Technology',\r\n        icon: <CodeTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#AFE2DE\"/>\r\n    },\r\n    {\r\n        id: 'i3',\r\n        title: 'Pharma & Medicine',\r\n        icon: <ExperimentTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#FFB454\"/>\r\n    },\r\n    {\r\n        id: 'i4',\r\n        title: 'Heath, Wellness & Fitness',\r\n        icon: <FireTwoTone className=\"check-box-industry-icon\"/>\r\n    },\r\n    {\r\n        id: 'i5',\r\n        title: 'Non-Profit',\r\n        icon: <HeartTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#60C6BE\"/>\r\n    },\r\n    {\r\n        id: 'i6',\r\n        title: 'Military',\r\n        icon: <RocketTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#FFB454\"/>\r\n    },\r\n    {\r\n        id: 'i7',\r\n        title: 'Higher Education',\r\n        icon: <BookTwoTone className=\"check-box-industry-icon\"/>\r\n    },\r\n    {\r\n        id: 'i8',\r\n        title: 'Marketing & Advertisement',\r\n        icon: <LikeTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#60C6BE\"/>\r\n    },\r\n    {\r\n        id: 'i9',\r\n        title: 'Transportaion',\r\n        icon: <CarTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#60C6BE\"/>\r\n    },\r\n    {\r\n        id: 'i10',\r\n        title: 'Management Consulting',\r\n        icon: <FilterTwoTone className=\"check-box-industry-icon\"/>\r\n    },\r\n    {\r\n        id: 'i11',\r\n        title: 'Legal Services',\r\n        icon: <FileExclamationTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#FFB454\"/>\r\n    },\r\n    {\r\n        id: 'i12',\r\n        title: 'Healthcare',\r\n        icon: <MedicineBoxTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#60C6BE\"/>\r\n    },\r\n    {\r\n        id: 'i13',\r\n        title: 'Insurance',\r\n        icon: <MedicineBoxTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#60C6BE\"/>\r\n    },\r\n    {\r\n        id: 'i14',\r\n        title: 'Building Materials',\r\n        icon: <MedicineBoxTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#60C6BE\"/>\r\n    },\r\n    {\r\n        id: 'i15',\r\n        title: 'Government Administration',\r\n        icon: <MedicineBoxTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#60C6BE\"/>\r\n    }\r\n\r\n\r\n]; \r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: true\r\n            };\r\n        case 'TEXT':\r\n            return {\r\n                ...state,\r\n                textinput: action.val,\r\n                isValid: true \r\n            };  \r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nconst SponsorTargetIndustry = props => {\r\n\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '', \r\n        textinput: '',\r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, textinput, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid, textinput)\r\n    }, [id, value, textinput, isValid, formUpdateHandler]);\r\n\r\n    const clickHandler = checkedValues => {\r\n        console.log('Selected value', checkedValues);\r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: checkedValues\r\n        });\r\n    };\r\n\r\n    const onTextSubmission = value => {\r\n        console.log('newPosition text Entry', value);\r\n\r\n        dispatch({\r\n            type: 'TEXT',\r\n            val: value\r\n        });\r\n        message.success(value + ' Added to your submission!');\r\n    };\r\n\r\n    return(\r\n        <div className = 'response-field'>\r\n            <p>What industries are your target clients in?</p>\r\n            <Row>\r\n                <Checkbox.Group onChange={clickHandler} className=\"check-box-wrapper\">\r\n                    {DUMMY_INDUSTRIES.map( title => (\r\n                        <div key={title.id} className=\"check-box-generic\">\r\n                            <Checkbox key={title.id} value={title.title}>\r\n                                {title.icon}{title.title}\r\n                            </Checkbox>\r\n                        </div>\r\n                        ))}\r\n                </Checkbox.Group>\r\n            </Row>\r\n            <Row className= 'other-input'>\r\n                <p>Have a custom industry in mind?</p>\r\n                <Search placeholder=\"Enter industry here\" allowClear enterButton=\"+\" onSearch={onTextSubmission} />\r\n            </Row>\r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default SponsorTargetIndustry;\r\n","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetHeadCount.js",["114"],"import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { Checkbox, Row, Col } from 'antd';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faUserFriends, faUsers, faHome, faLandmark, faBuilding } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport '../../index.css';\r\n\r\nconst DUMMY_HEAD_COUNT = [\r\n    {\r\n        id: '1',\r\n        title: '0 - 50',\r\n        icon: <FontAwesomeIcon icon={faUser} />\r\n    },\r\n    {\r\n        id: '2',\r\n        title: '51 - 100',\r\n        icon: <FontAwesomeIcon icon={faUserFriends} />\r\n    },\r\n    {\r\n        id: '3',\r\n        title: '101 - 250',\r\n        icon: <FontAwesomeIcon icon={faUsers} />\r\n    },\r\n    {\r\n        id: '4',\r\n        title: '251 -500',\r\n        icon: <FontAwesomeIcon icon={faHome} />\r\n    },\r\n    {\r\n        id: '5',\r\n        title: '501 -1000',\r\n        icon: <FontAwesomeIcon icon={faLandmark} />\r\n    },\r\n    {\r\n        id: '6',\r\n        title: 'more than 1000',\r\n        icon: <FontAwesomeIcon icon={faBuilding} />\r\n    }\r\n];\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: true\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nconst SponsorTargetHeadCount = props => {\r\n\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '', \r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid)\r\n    }, [id, value, isValid, formUpdateHandler]);\r\n\r\n\r\n\r\n    const clickHandler = checkedValues => {\r\n        console.log('Selected value', checkedValues);\r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: checkedValues\r\n        });\r\n    };\r\n\r\n    return( \r\n        <div className = 'response-field'>\r\n            <p>What company sizes of your target accounts?</p>\r\n            <Row >\r\n                <Checkbox.Group onChange={clickHandler} className=\"check-box-wrapper\">\r\n                    {DUMMY_HEAD_COUNT.map( title => (\r\n                        <div key={title.id} className=\"check-box-headcount\">\r\n                                <Checkbox value={title.title}>\r\n                                    {title.icon} {title.title }\r\n                                </Checkbox>\r\n                        </div>\r\n                    ))}\r\n                </Checkbox.Group>\r\n            </Row>\r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default SponsorTargetHeadCount;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetRegion.js",["115"],"import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { Checkbox, Row, Col } from 'antd';\r\n\r\nimport west from '../../shared/assets/west.png';\r\nimport mid_west from '../../shared/assets/mid_west.png';\r\nimport north_east from '../../shared/assets/north_east.png';\r\nimport south_east from '../../shared/assets/south_east.png';\r\nimport south_west from '../../shared/assets/south_west.png';\r\n\r\nimport '../../index.css';\r\n\r\nconst DUMMY_REGIONS = [\r\n    {\r\n        id: '1', \r\n        title: 'West',\r\n        icon: <img src={west} alt=\"West\" />\r\n    },\r\n    {\r\n        id: '2',\r\n        title: 'Mid-West',\r\n        icon: <img src={mid_west} alt=\"West\" />\r\n    },\r\n    {\r\n        id: '3',\r\n        title: 'South-West',\r\n        icon: <img src={south_west} alt=\"West\" />\r\n    },\r\n    {\r\n        id: '4',\r\n        title: 'North-East',\r\n        icon: <img src={north_east} alt=\"West\" />\r\n    },\r\n    {\r\n        id: '5',\r\n        title: 'South-East',\r\n        icon: <img src={south_east} alt=\"West\" />\r\n    }\r\n];\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: true\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nconst SponsorTargetRegion = props => {\r\n    \r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '', \r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid)\r\n    }, [id, value, isValid, formUpdateHandler]);\r\n\r\n    const clickHandler = checkedValues => {\r\n        console.log('Selected value', checkedValues);\r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: checkedValues\r\n        });\r\n    };\r\n\r\n    return(\r\n        <div className = 'response-field'>\r\n            <p>What US regions are your target accounts headquatered in?</p>\r\n            <Row >\r\n                <Checkbox.Group onChange={clickHandler} className=\"check-box-wrapper\">\r\n                    {DUMMY_REGIONS.map( title => (\r\n                        <div key={title.id} className=\"check-box-generic\">\r\n                                <Checkbox value={title.title}>\r\n                                    {title.icon} {title.title }\r\n                                </Checkbox>\r\n                        </div>\r\n                    ))}\r\n                </Checkbox.Group>\r\n            </Row>\r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default SponsorTargetRegion;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetDate.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetHost.js",["116","117"],"import React, { useReducer, useEffect } from 'react';\r\n\r\nimport '../../index.css';\r\n\r\nimport { Col, Checkbox, Typography, Radio } from 'antd';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: true\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nconst SponsorTargetHost = props => {\r\n\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '', \r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid)\r\n    }, [id, value, isValid, formUpdateHandler]);\r\n\r\n    const clickHandler = checkedValues => {\r\n        console.log('Selected value', checkedValues);\r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: checkedValues.target.value\r\n        });\r\n    };\r\n\r\n    return(\r\n        <div className = 'response-field'>\r\n            <p>Do you want us to source a host/moderator for the roundtable? </p>\r\n            <Radio.Group onChange={clickHandler}>\r\n                <div span={12} className=\"check-box-generic\">\r\n                    <Radio value={1}>                               \r\n                        <Text strong>I have my own host. </Text>\r\n                    </Radio>\r\n                </div>\r\n                <div span={12} className=\"check-box-generic\">\r\n                    <Radio value={0}>\r\n                        <Text strong>Please source host for me. </Text> \r\n                    </Radio>\r\n                </div>\r\n            </Radio.Group> \r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default SponsorTargetHost;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetTopic.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\pages\\SponsorRequest.js",["118","119","120"],"import React, { useState, useReducer, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\nimport { Form, Steps, Button, message, Row, Col } from 'antd';\r\n\r\nimport SponsorAuth from '../components/SponsorAuth';\r\nimport SponsorTargetRole from '../components/SponsorTargetRole';\r\nimport SponsorTargetIndustry from '../components/SponsorTargetIndustry';\r\nimport SponsorTargetHeadCount from '../components/SponsorTargetHeadCount';\r\nimport SponsorTargetRegion from '../components/SponsorTargetRegion';\r\nimport SponsorSummary from '../components/SponsorSummary';\r\nimport SponsorTargetUsersList from '../components/SponsorTargetUsersList';\r\nimport SponsorTargetDate from '../components/SponsorTargetDate';\r\nimport SponsorTargetTopic from '../components/SponsorTargetTopic';\r\nimport SponsorTargetHost from '../components/SponsorTargetHost';\r\n\r\nimport '../../index.css';\r\nimport formImage0 from '../../shared/assets/sponsor-request-images/0.jpg';\r\nimport formImage1 from '../../shared/assets/sponsor-request-images/1.jpg';\r\nimport formImage2 from '../../shared/assets/sponsor-request-images/2.jpg';\r\nimport formImage3 from '../../shared/assets/sponsor-request-images/3.jpg';\r\nimport formImage4 from '../../shared/assets/sponsor-request-images/4.jpg';\r\nimport formImage5 from '../../shared/assets/sponsor-request-images/5.jpg';\r\nimport formImage6 from '../../shared/assets/sponsor-request-images/6.jpg';\r\n\r\nimport logo from '../../shared/assets/logo2.png';\r\n\r\nconst { Step } = Steps;\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'SELECT':\r\n            let formIsValid = true;\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId] : { value: action.value, isValid: action.isValid }\r\n                },\r\n                isValid: formIsValid\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst SponsorRequest = () => {\r\n\r\n    const [current, setCurrent] = useState(0);\r\n    \r\n    const { user } = useAuth0();\r\n\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n            inputs: {\r\n                username: { value: '', isValid: false},\r\n                roles: { value: '', isValid: false},\r\n                industries: { value: '', isValid: false}\r\n            }, isValid: false});\r\n\r\n    const formUpdateHandler = useCallback(( id, value, isValid, textInput = null ) => { \r\n        console.log(`formUpdateHandler id: ${id} value: ${value} textInput: ${textInput} isValid: ${isValid}`);\r\n        if(textInput && value){\r\n            value.push(textInput);\r\n        } else if (textInput && !value){\r\n            value = textInput;\r\n        }\r\n        dispatch({type: 'SELECT', value: value, inputId: id, isValid: isValid});\r\n    }, []);\r\n\r\n    const steps = [\r\n        { \r\n            title: 'Step 1', \r\n            content:  <SponsorAuth \r\n                        id=\"username\"\r\n                        formUpdateHandler={formUpdateHandler} \r\n                        value={formState.inputs.username}\r\n                        />,\r\n            image: <img src={formImage0} alt=\"formImage0\" className=\"response-field-image\" />\r\n                        \r\n        },\r\n        { \r\n            title: 'Step 2', \r\n            content: \r\n                <SponsorTargetRole\r\n                    id=\"roles\"\r\n                    formUpdateHandler={formUpdateHandler}\r\n                    value={formState.inputs.roles}/>,\r\n            image: <img src={formImage1} alt=\"formImage1\" className=\"response-field-image\" />\r\n        },\r\n        { \r\n            title: 'Step 3', \r\n            content: \r\n            <SponsorTargetIndustry \r\n                id=\"industries\"\r\n                formUpdateHandler={formUpdateHandler}\r\n                value={formState.inputs.industries}/>,\r\n            image: <img src={formImage2} alt=\"formImage2\" className=\"response-field-image\" /> \r\n        },\r\n        { \r\n            title: 'Step 4', \r\n            content: \r\n            <SponsorTargetHeadCount \r\n                id=\"headCounts\"\r\n                formUpdateHandler={formUpdateHandler}\r\n                value={formState.inputs.headCounts}/>,\r\n            image: <img src={formImage3} alt=\"formImage3\" className=\"response-field-image\" /> \r\n        },\r\n        { \r\n            title: 'Step 5', \r\n            content: \r\n            <SponsorTargetRegion\r\n                id=\"regions\"\r\n                formUpdateHandler={formUpdateHandler}\r\n                value={formState.inputs.regions}/>,\r\n            image: <img src={formImage4} alt=\"formImage4\" className=\"response-field-image\" />\r\n        },\r\n        { \r\n            title: 'Step 6', \r\n            content: \r\n            <SponsorTargetUsersList \r\n                id=\"users\"\r\n                formUpdateHandler={formUpdateHandler}\r\n                value={formState.inputs}/>,\r\n            image: <img src={formImage5} alt=\"formImage5\" className=\"response-field-image\" />\r\n        },\r\n        { \r\n            title: 'Step 7', \r\n            content: \r\n            <SponsorTargetDate \r\n                id=\"dates\"\r\n                formUpdateHandler={formUpdateHandler}\r\n                value={formState.inputs.dates}/>,\r\n            image: <img src={formImage6} alt=\"formImage6\" className=\"response-field-image\"/>\r\n        },\r\n        { \r\n            title: 'Step 8', \r\n            content: \r\n            <SponsorTargetTopic \r\n                id=\"topic\"\r\n                formUpdateHandler={formUpdateHandler}\r\n                value={formState.inputs.topic}/>,\r\n            image: <img src={formImage6} alt=\"formImage6\" className=\"response-field-image\"/>\r\n        },\r\n        { \r\n            title: 'Step 9', \r\n            content: \r\n            <SponsorTargetHost \r\n                id=\"host\"\r\n                formUpdateHandler={formUpdateHandler}\r\n                value={formState.inputs.host}/>,\r\n            image: <img src={formImage6} alt=\"formImage6\" className=\"response-field-image\"/>\r\n        },\r\n        { \r\n            title: 'Step 10', \r\n            content: \r\n            <div className='sponsor-thankyou'>\r\n                <h1>Thank You for Your Submission!</h1>\r\n                <p>We will review your application and get back to you as soon as possible</p>\r\n                <CheckCircleTwoTone className=\"sponsor-thankyou-icon\" twoToneColor=\"#52c41a\"/>\r\n            </div>,\r\n            image: <img src={formImage6} alt=\"formImage6\" className=\"response-field-image\"/>\r\n        }\r\n    ];\r\n\r\n    const next = () => {\r\n        setCurrent(current + 1);\r\n        console.log(\"triggering next: current formState: \", formState);\r\n    };\r\n\r\n    // Prev is currently disabled as it jsut complicated the state management\r\n    const prev = () => {\r\n        setCurrent(current - 1);\r\n    };\r\n\r\n    const confirmationHandler = async event => {\r\n        console.log('Submitting completed form: ', formState);\r\n        \r\n        // Form submission body creation\r\n        let payload;\r\n        try {\r\n            payload = JSON.stringify({\r\n                jobTitles  : formState.inputs.roles.value,\r\n                industries : formState.inputs.industries.value, \r\n                clientList : 'text.csv',\r\n                headCounts : formState.inputs.headCounts.value,\r\n                regions    : formState.inputs.regions.value,\r\n                users      : formState.inputs.users.value,\r\n                dates      : formState.inputs.dates.value,\r\n                topic      : formState.inputs.topic.value[0],\r\n                host       : formState.inputs.host.value[0],\r\n                sponsor    : user ? user.email : 1,\r\n            })\r\n        }\r\n        catch (err){\r\n            console.log('Error in payload body creation');\r\n            console.log(err);\r\n        }\r\n\r\n        console.log(\"Sponsorship Payload: \", payload);\r\n\r\n        try {\r\n            const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/sponsors/sponsorRequest', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type' : 'application/json'\r\n                },\r\n                body: payload\r\n            });            \r\n            const responseData = await response.json();\r\n            console.log('Server response: ', responseData);\r\n            setCurrent(current + 1);         \r\n        } catch (err) {\r\n            console.log(err);\r\n        }; \r\n      };\r\n\r\n    return (\r\n        <Form className = \"site-layout-content\">\r\n            <Steps current={current}>\r\n                {console.log( \"hard look at formstate \", formState )}\r\n                {steps.map(item => (\r\n                    <Step key={item.title} hidden />\r\n                ))}\r\n            </Steps>\r\n            \r\n            <Row>\r\n                <Col md={24} lg={12}>\r\n                    <div className=\"response-field-wrapper\">\r\n                        <Row>\r\n                            <img src={logo} alt=\"Logo\" className=\"logo\"/>\r\n                        </Row>\r\n                        <Row className=\"response-field\">\r\n                            {steps[current].content}\r\n                        </Row>\r\n\r\n                        <div className=\"response-action\">\r\n                            {current < steps.length - 2 && user && (\r\n                                <Button type=\"primary\" onClick={() => next()}>\r\n                                    Next\r\n                                </Button>\r\n                            )}\r\n                            {process.env.REACT_APP_BACKEND_URL === 'http://localhost:5000/api' && current < steps.length - 2 && (\r\n                                <Button type=\"primary\" onClick={() => next()}>\r\n                                    Next\r\n                                </Button>\r\n                            )}\r\n                            {/*current > 0 && (\r\n                                <Button onClick={() => prev()}>\r\n                                    Previous\r\n                                </Button>\r\n                            )*/}                \r\n                            {current === steps.length - 2 && (\r\n                                <Button className=\"response-submit\" type=\"primary\" htmlType=\"submit\" onClick={() => confirmationHandler()}>\r\n                                    Submit Application\r\n                                </Button>\r\n                            )}\r\n                            {current === steps.length - 1 && (\r\n                                <Link to={`/`} className=\"home-call-to-action\">\r\n                                    <Button type=\"primary\">Back to Home</Button>\r\n                                </Link>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col md={24} lg={10}>\r\n                    {steps[current].image}\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n};\r\n\r\nexport default SponsorRequest;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Auth\\Profile.js",["121"],"import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Card, Avatar } from 'antd';\r\n\r\nconst { Meta } = Card;\r\n\r\n\r\nconst Profile = () => {\r\n  const { user, isAuthenticated, isLoading } = useAuth0();\r\n\r\n  return (\r\n    user && (\r\n      <Card loading={isLoading}>\r\n        <Meta \r\n          title = {user.name}\r\n          avatar = {<Avatar src={user.picture} size=\"large\"/>}\r\n          description = {user.email}\r\n        />        \r\n      </Card>\r\n    ) \r\n  );\r\n};\r\n\r\nexport default Profile;",["122","123"],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetUsersList.js",["124","125"],"import React, { useReducer, useEffect, useState } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport '../../index.css';\r\n\r\nimport { Checkbox, Row, Col, Typography, Avatar, Spin, Popover, Button, Tag, List } from 'antd';\r\n\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nconst { Text } = Typography;\r\n\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: [... new Set([...state.value].concat(action.val))],\r\n                isValid: true\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst SponsorTargetUsersList = props => {\r\n    \r\n    const searchParams = props.value;\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [filteredUsers, setFilteredUsers] = useState();\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            setIsLoading(true);\r\n            try\r\n            {\r\n                console.log(\"searching on the following params: \",  searchParams);\r\n                const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/sponsors/userSearch', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type' : 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        jobTitles  : searchParams.roles.value,\r\n                        industries : searchParams.industries.value,\r\n                    })\r\n                });\r\n\r\n                const responseData = await response.json();\r\n\r\n                if(!response.ok){\r\n                    throw new Error(responseData.message);\r\n                }\r\n\r\n                console.log('Filtered users:', responseData)\r\n                setFilteredUsers(responseData.filteredUsers);\r\n                setIsLoading(false);\r\n            } catch (err) {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        sendRequest();\r\n    }, []);\r\n\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '', \r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid)\r\n    }, [id, value, isValid, formUpdateHandler]);\r\n\r\n    const clickHandler = checkedValues => {\r\n        console.log('Selected value', checkedValues);\r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: checkedValues\r\n        });\r\n    };\r\n\r\n    return(\r\n        <div className = 'response-field'> \r\n            <p>The following executives best match your target client parameters.</p>\r\n            <p className=\"text\"> Select up to 15 tech executives you would like to attend your virtual round table.</p>\r\n                \r\n            <Row>\r\n                {!isLoading && filteredUsers\r\n                    ? (\r\n                        <Checkbox.Group onChange={clickHandler} className= \"user-check-box-wrapper\">\r\n                            <List                                 \r\n                                dataSource ={filteredUsers}\r\n                                pagination={{\r\n                                    onChange: page => {console.log(page);},\r\n                                    pageSize: 4,\r\n                                    showSizeChanger : false\r\n                                }}\r\n                                renderItem={\r\n                                    item => (\r\n                                        <List.Item key={item.item.item[\"_id\"]} className=\"user-list-check-box\">\r\n                                            <Col md={1} lg={2} className=\"check-box-style\">\r\n                                                <Checkbox value={ item.item.item[\"_id\"] }/>\r\n                                            </Col>\r\n                                            <Col md={5} lg={6}>\r\n                                                <div className=\"avatar-wrapper\">\r\n                                                    <Avatar size={100} \r\n                                                        src= {item.item.item[\"Personal Photo\"] !== 'Image NA' && item.item.item[\"Personal Photo\"] }\r\n                                                        icon = { item.item.item[\"Personal Photo\"] === 'Image NA' && <UserOutlined /> }\r\n                                                            />\r\n                                                </div>\r\n                                                <div className=\"avatar-wrapper\">\r\n                                                    <Popover content={item.item.item[\"Personal Description\"]} title=\"Description\" overlayClassName=\"popover-content\">\r\n                                                        <Button type=\"primary\">Description</Button>\r\n                                                    </Popover>\r\n                                                </div>\r\n                                                <div className=\"avatar-wrapper\">\r\n                                                    <Popover content={item.item.item[\"Experience\"]} title=\"Experience\" overlayClassName=\"popover-content\">\r\n                                                        <Button>Experience</Button>\r\n                                                    </Popover>\r\n                                                </div>\r\n                                            </Col>\r\n                                            <Col md={18} lg={16} className=\"details-wrapper\">\r\n                                                <Row>\r\n                                                    <Text className=\"user-list-sub-heading\">{\" \" + item.item.item[\"First Name\"] + \" \" + item.item.item[\"Last Name\"]}</Text>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Text><span className=\"user-list-sub-heading\">Title</span>: {item.item.item.Position}</Text>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Text><span className=\"user-list-sub-heading\">Company:</span> {item.item.item.Company}</Text>\r\n                                                </Row>   \r\n                                                <Row>\r\n                                                    <Text><span className=\"user-list-sub-heading\">Location:</span> {item.item.item.State}</Text>\r\n                                                </Row>\r\n                                                <Row className=\"tag-wrapper\">\r\n                                                    <Tag >Est. Employees: <NumberFormat value={item.item.item[\"# of Employees\"]} thousandSeparator={true} displayType={'text'} /></Tag>\r\n                                                </Row>\r\n                                                <Row className=\"tag-wrapper\">\r\n                                                    <Tag>Industry: {item.item.item[\"Industry\"]}</Tag>\r\n                                                </Row>\r\n                                                <Row className=\"tag-wrapper\">\r\n                                                    <Tag>Est. Revenue: {item.item.item[\"Estimated Revenues\"]}</Tag>\r\n                                                </Row> \r\n                                            </Col>\r\n                                        </List.Item>\r\n                                    )\r\n                                }\r\n                            />\r\n                        </Checkbox.Group>\r\n                    )\r\n                    : (\r\n                        <div className=\"user-list-spinner\">\r\n                            <Spin />\r\n                        </div>\r\n                    )\r\n                }\r\n            </Row>\r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default SponsorTargetUsersList;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorSummary.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":6,"column":10,"nodeType":"132","messageId":"133","endLine":6,"endColumn":26},{"ruleId":"130","severity":1,"message":"134","line":10,"column":9,"nodeType":"132","messageId":"133","endLine":10,"endColumn":13},{"ruleId":"130","severity":1,"message":"135","line":36,"column":55,"nodeType":"132","messageId":"133","endLine":36,"endColumn":64},{"ruleId":"130","severity":1,"message":"136","line":16,"column":9,"nodeType":"132","messageId":"133","endLine":16,"endColumn":14},{"ruleId":"137","severity":1,"message":"138","line":23,"column":21,"nodeType":"139","endLine":23,"endColumn":43},{"ruleId":"140","severity":1,"message":"141","line":26,"column":29,"nodeType":"139","endLine":26,"endColumn":65},{"ruleId":"137","severity":1,"message":"138","line":30,"column":25,"nodeType":"139","endLine":30,"endColumn":79},{"ruleId":"137","severity":1,"message":"138","line":33,"column":25,"nodeType":"139","endLine":33,"endColumn":74},{"ruleId":"130","severity":1,"message":"142","line":3,"column":25,"nodeType":"132","messageId":"133","endLine":3,"endColumn":28},{"ruleId":"130","severity":1,"message":"142","line":3,"column":25,"nodeType":"132","messageId":"133","endLine":3,"endColumn":28},{"ruleId":"130","severity":1,"message":"142","line":3,"column":25,"nodeType":"132","messageId":"133","endLine":3,"endColumn":28},{"ruleId":"130","severity":1,"message":"142","line":3,"column":25,"nodeType":"132","messageId":"133","endLine":3,"endColumn":28},{"ruleId":"130","severity":1,"message":"142","line":5,"column":10,"nodeType":"132","messageId":"133","endLine":5,"endColumn":13},{"ruleId":"130","severity":1,"message":"143","line":5,"column":15,"nodeType":"132","messageId":"133","endLine":5,"endColumn":23},{"ruleId":"130","severity":1,"message":"144","line":7,"column":31,"nodeType":"132","messageId":"133","endLine":7,"endColumn":38},{"ruleId":"130","severity":1,"message":"145","line":14,"column":8,"nodeType":"132","messageId":"133","endLine":14,"endColumn":22},{"ruleId":"130","severity":1,"message":"146","line":174,"column":11,"nodeType":"132","messageId":"133","endLine":174,"endColumn":15},{"ruleId":"130","severity":1,"message":"147","line":9,"column":17,"nodeType":"132","messageId":"133","endLine":9,"endColumn":32},{"ruleId":"126","replacedBy":"148"},{"ruleId":"128","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":18,"column":28,"nodeType":"152","messageId":"153","endLine":18,"endColumn":29,"fix":"154"},{"ruleId":"155","severity":1,"message":"156","line":63,"column":8,"nodeType":"157","endLine":63,"endColumn":10,"suggestions":"158"},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'LinkedinOutlined' is defined but never used.","Identifier","unusedVar","'Text' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'Title' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Col' is defined but never used.","'Checkbox' is defined but never used.","'message' is defined but never used.","'SponsorSummary' is defined but never used.","'prev' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.",["159"],["160"],"rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"161","text":"162"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchParams'. Either include it or remove the dependency array.","ArrayExpression",["163"],"no-global-assign","no-unsafe-negation",[502,503],"",{"desc":"164","fix":"165"},"Update the dependencies array to be: [searchParams]",{"range":"166","text":"167"},[2033,2035],"[searchParams]"]