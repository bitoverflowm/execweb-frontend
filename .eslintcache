[{"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\index.js":"1","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorAuth.js":"2","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\components\\SponsorshipRequests.js":"3","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\pages\\AdminDashboard.js":"4","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\Home.js":"5","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Navigation\\MainNavigation.js":"6","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\App.js":"7","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Navigation\\NavLinks.js":"8","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\pages\\sponsorHome.js":"9","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\components\\SponsorshipRequestDetails.js":"10","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\reportWebVitals.js":"11","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetRole.js":"12","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetIndustry.js":"13","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetHeadCount.js":"14","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetRegion.js":"15","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetDate.js":"16","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetHost.js":"17","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetTopic.js":"18","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\pages\\SponsorRequest.js":"19","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Auth\\Profile.js":"20","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetUsersList.js":"21","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorSummary.js":"22"},{"size":532,"mtime":1613524438019,"results":"23","hashOfConfig":"24"},{"size":2276,"mtime":1613942662407,"results":"25","hashOfConfig":"24"},{"size":1786,"mtime":1612221303634,"results":"26","hashOfConfig":"24"},{"size":1879,"mtime":1612222265721,"results":"27","hashOfConfig":"24"},{"size":3537,"mtime":1613985356430,"results":"28","hashOfConfig":"24"},{"size":386,"mtime":1612170812349,"results":"29","hashOfConfig":"24"},{"size":2501,"mtime":1613684685775,"results":"30","hashOfConfig":"24"},{"size":760,"mtime":1613738008144,"results":"31","hashOfConfig":"24"},{"size":302,"mtime":1613735733091,"results":"32","hashOfConfig":"24"},{"size":1834,"mtime":1612225405328,"results":"33","hashOfConfig":"24"},{"size":362,"mtime":1611762160796,"results":"34","hashOfConfig":"24"},{"size":3282,"mtime":1613989733016,"results":"35","hashOfConfig":"24"},{"size":4570,"mtime":1613997185926,"results":"36","hashOfConfig":"24"},{"size":2628,"mtime":1613991964009,"results":"37","hashOfConfig":"24"},{"size":2610,"mtime":1613992396157,"results":"38","hashOfConfig":"24"},{"size":3303,"mtime":1613996142307,"results":"39","hashOfConfig":"24"},{"size":1917,"mtime":1613997947739,"results":"40","hashOfConfig":"24"},{"size":2404,"mtime":1613997853236,"results":"41","hashOfConfig":"24"},{"size":11342,"mtime":1613998601960,"results":"42","hashOfConfig":"24"},{"size":529,"mtime":1613872520887,"results":"43","hashOfConfig":"24"},{"size":7822,"mtime":1613995451977,"results":"44","hashOfConfig":"24"},{"size":1609,"mtime":1613998191567,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"wdh0zt",{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\index.js",[],["98","99"],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorAuth.js",["100","101","102"],"import React, { useReducer, useEffect } from 'react';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nimport { Button, Typography } from 'antd';\r\n\r\nimport { LinkedinOutlined } from '@ant-design/icons';\r\n\r\nimport Profile from '../../shared/components/Auth/Profile';\r\n\r\nconst { Text } = Typography;\r\n\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: true\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nconst SponsorAuth = props => {\r\n    \r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '', \r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, isValid } = inputState;\r\n    const { loginWithRedirect, user, isAuthenticated, isLoading } = useAuth0();\r\n    \r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid)\r\n    }, [id, value, isValid, formUpdateHandler]);\r\n\r\n    const clickHandler = submission => {\r\n        console.log('Submitted Value', submission);\r\n        loginWithRedirect();   \r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: user\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className = 'response-field'>\r\n            <p>We will facilitate virtual roundtables with tech execs in your target market who are actively looking for new vendors.</p>\r\n            <p>You will need to answer a few questions, takes less than 2 minutes to complete, so that we can get you in front of the 5-10 most relevant to you tech executives.</p>\r\n            <p>You will need to to join using your LinkedIn account since we are an exclusive professional network and need to confirm everyone's professional identity.</p>\r\n            <p>Let's begin... </p>\r\n            {console.log('props value in linked validation: ', props.value)}\r\n            <div className= \"linkedin-auth-wrapper\">\r\n                {isAuthenticated \r\n                    ? <Profile />\r\n                    : <Button type=\"primary\" className=\"linkedin-auth\" onClick={() => clickHandler()}>  Connect to LinkedIn</Button>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SponsorAuth;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\components\\SponsorshipRequests.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\pages\\AdminDashboard.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\Home.js",["103","104","105"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFacebook, faTwitter, faInstagram } from '@fortawesome/free-brands-svg-icons';\r\n\r\nimport { Button, Layout, Row, Col, Typography } from 'antd';\r\nimport { Content, Footer} from 'antd/lib/layout/layout';\r\n\r\nimport jumboBig from './shared/assets/jumbo-home/jumbo-main.jpg';\r\nimport howItWorks from './shared/assets/jumbo-home/how-it-works.jpg';\r\nimport homeWhy from './shared/assets/jumbo-home/home-why.jpg';\r\nimport logo from './shared/assets/logo2.png';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Home = () => {\r\n    return(\r\n        <React.Fragment>\r\n            <Layout>\r\n                <Content className=\"home-jumbo-content\">\r\n                    <img src={jumboBig} />\r\n                    <Row >\r\n                        <Link to={`/sponsorHome/`} className=\"home-call-to-action\">\r\n                            <Button type=\"primary\">Apply to Sponsor</Button>\r\n                        </Link>\r\n                    </Row>\r\n                    <Row>\r\n                        <Title level={3} className=\"home-about-heading\">How it Works</Title>\r\n                    </Row>\r\n                    <Row>\r\n                        <img src={howItWorks} className=\"home-about-content\"/>\r\n                    </Row>\r\n                    <Row className=\"home-why-content-wrapper\">\r\n                        <img src={homeWhy} className=\"home-why-content\"/>\r\n                    </Row>                    \r\n                </Content>\r\n                <Footer className=\"home-footer\" style={{background : '#fff'}}>\r\n                    <Row>\r\n                        <Col span={8}>\r\n                            <div className=\"home-footer-wrapper\">\r\n                                <img src={logo} alt=\"Logo\" className=\"home-footer-logo\"/>\r\n                            </div>                            \r\n                        </Col>\r\n                        <Col span={4} className=\"home-footer-col-wrapper\">\r\n                            <Row className=\"home-footer-headers\">Resources</Row>\r\n                            <Row>Support</Row>\r\n                            <Row>Blog</Row>\r\n                            <Row>Privacy</Row>\r\n                            <Row>Terms</Row>\r\n                            <Row>Data processing</Row>\r\n                        </Col>\r\n                        <Col span={4} className=\"home-footer-col-wrapper\">\r\n                            <Row className=\"home-footer-headers\">Connect With Us</Row>\r\n                            <Row><FontAwesomeIcon className=\"home-footer-icon\" icon={faFacebook} size=\"lg\"/> {\"  \"}Facebook</Row>\r\n                            <Row><FontAwesomeIcon className=\"home-footer-icon\" icon={faTwitter} size=\"lg\"/>Twitter</Row>\r\n                            <Row><FontAwesomeIcon className=\"home-footer-icon\" icon={faInstagram} size=\"lg\" />Instagram</Row>\r\n                        </Col>\r\n                        <Col span={8} className=\"home-footer-col-wrapper\">\r\n                            <Row className=\"home-footer-headers\">Need Help?</Row>\r\n                            <Row>Let us know if you have any questions or comments and our customer success team will get back to you as soon as possible.</Row>\r\n                            <Row>support@introeq.com</Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Footer>\r\n            </Layout>\r\n        </React.Fragment>\r\n        );\r\n};\r\n\r\nexport default Home;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Navigation\\MainNavigation.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\App.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Navigation\\NavLinks.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\pages\\sponsorHome.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\components\\SponsorshipRequestDetails.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetRole.js",["106"],"import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { Checkbox, Row, Col, Input, message } from 'antd';\r\n\r\nimport '../../index.css';\r\n\r\nconst { Search } = Input;\r\n\r\n\r\nconst DUMMY_JOB_TITLE = [\r\n    {\r\n        id: 'j1',\r\n        title: 'Chief Information Officer'\r\n    },\r\n    {\r\n        id: 'j2',\r\n        title: 'Chief Executive Officer'\r\n    },\r\n    {\r\n        id: 'j3',\r\n        title: 'Chief Technology Officer'\r\n    },\r\n    {\r\n        id: 'j4',\r\n        title: 'Chief Operations Officer'\r\n    },\r\n    {\r\n        id: 'j5',\r\n        title: 'Software Developer'\r\n    },\r\n    {\r\n        id: 'j6',\r\n        title: 'Chief Information Security Officer'\r\n    },\r\n    {\r\n        id: 'j7',\r\n        title: 'Chief Data Officer'\r\n    },\r\n    {\r\n        id: 'j8',\r\n        title: 'Chief Compliance Officer'\r\n    },\r\n    {\r\n        id: 'j9',\r\n        title: 'Chief Product Officer'\r\n    },\r\n    {\r\n        id: 'j10',\r\n        title: 'Director of Sales '\r\n    }\r\n];\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: true\r\n            };\r\n        case 'TEXT':\r\n            return {\r\n                ...state,\r\n                textinput: action.val,\r\n                isValid: true \r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst SponsorTargetRole = props => {\r\n\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '',\r\n        textinput: '',\r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, textinput, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid, textinput)\r\n    }, [id, value, textinput, isValid, formUpdateHandler]);\r\n\r\n    const clickHandler = checkedValues => {\r\n        console.log('Selected value', checkedValues);\r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: checkedValues\r\n        });\r\n    };\r\n\r\n    const onTextSubmission = value => {\r\n        console.log('newPosition text Entry', value);\r\n\r\n        dispatch({\r\n            type: 'TEXT',\r\n            val: value\r\n        });\r\n        message.success(value + ' Added to your submission!');\r\n    }\r\n\r\n\r\n    return(\r\n        <div className = 'response-field'>\r\n            <p>What are the job titles of your target clients?</p>\r\n            <Row>\r\n                <Checkbox.Group onChange={clickHandler} className=\"check-box-wrapper\">\r\n                        {DUMMY_JOB_TITLE.map( title => (\r\n                                <div key={title.id} className=\"check-box-jobs\">\r\n                                    <Checkbox key={title.id} value={title.title}>\r\n                                        {title.title}\r\n                                    </Checkbox>\r\n                                </div>\r\n                        ))}\r\n                </Checkbox.Group>\r\n            </Row>\r\n            <Row className= 'other-input'>\r\n                <p>Other:</p>\r\n                <Search placeholder=\"Enter job title here\" allowClear enterButton=\"+\" onSearch={onTextSubmission} />\r\n            </Row>\r\n            \r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default SponsorTargetRole;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetIndustry.js",["107"],"import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { Checkbox, Row, Col, Input, message } from 'antd';\r\n\r\nimport { FireTwoTone, ExperimentTwoTone, CodeTwoTone, BankTwoTone, LikeTwoTone, HeartTwoTone, RocketTwoTone, BookTwoTone, CarTwoTone, FilterTwoTone, FileExclamationTwoTone, MedicineBoxTwoTone } from '@ant-design/icons';\r\n\r\nimport '../../index.css';\r\n\r\nconst { Search } = Input;\r\n\r\nconst DUMMY_INDUSTRIES = [\r\n    {\r\n        id: 'i1',\r\n        title: 'Financial Services',\r\n        icon: <BankTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#FFB454\"/>\r\n    },\r\n    {\r\n        id: 'i2',\r\n        title: 'Technology',\r\n        icon: <CodeTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#AFE2DE\"/>\r\n    },\r\n    {\r\n        id: 'i3',\r\n        title: 'Pharma & Medicine',\r\n        icon: <ExperimentTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#FFB454\"/>\r\n    },\r\n    {\r\n        id: 'i4',\r\n        title: 'Energy',\r\n        icon: <FireTwoTone className=\"check-box-industry-icon\"/>\r\n    },\r\n    {\r\n        id: 'i5',\r\n        title: 'Non-Profit',\r\n        icon: <HeartTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#60C6BE\"/>\r\n    },\r\n    {\r\n        id: 'i6',\r\n        title: 'Military',\r\n        icon: <RocketTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#FFB454\"/>\r\n    },\r\n    {\r\n        id: 'i7',\r\n        title: 'Higher Education',\r\n        icon: <BookTwoTone className=\"check-box-industry-icon\"/>\r\n    },\r\n    {\r\n        id: 'i8',\r\n        title: 'Marketing & Advertisement',\r\n        icon: <LikeTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#60C6BE\"/>\r\n    },\r\n    {\r\n        id: 'i9',\r\n        title: 'Transportaion',\r\n        icon: <CarTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#60C6BE\"/>\r\n    },\r\n    {\r\n        id: 'i10',\r\n        title: 'Sanitation',\r\n        icon: <FilterTwoTone className=\"check-box-industry-icon\"/>\r\n    },\r\n    {\r\n        id: 'i11',\r\n        title: 'Legal Services',\r\n        icon: <FileExclamationTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#FFB454\"/>\r\n    },\r\n    {\r\n        id: 'i12',\r\n        title: 'Healthcare',\r\n        icon: <MedicineBoxTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#60C6BE\"/>\r\n    }\r\n\r\n]; \r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: true\r\n            };\r\n        case 'TEXT':\r\n            return {\r\n                ...state,\r\n                textinput: action.val,\r\n                isValid: true \r\n            };  \r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nconst SponsorTargetIndustry = props => {\r\n\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '', \r\n        textinput: '',\r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, textinput, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid, textinput)\r\n    }, [id, value, textinput, isValid, formUpdateHandler]);\r\n\r\n    const clickHandler = checkedValues => {\r\n        console.log('Selected value', checkedValues);\r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: checkedValues\r\n        });\r\n    };\r\n\r\n    const onTextSubmission = value => {\r\n        console.log('newPosition text Entry', value);\r\n\r\n        dispatch({\r\n            type: 'TEXT',\r\n            val: value\r\n        });\r\n        message.success(value + ' Added to your submission!');\r\n    };\r\n\r\n    return(\r\n        <div className = 'response-field'>\r\n            <p>What industries are your target clients in?</p>\r\n            <Row>\r\n                <Checkbox.Group onChange={clickHandler} className=\"check-box-wrapper\">\r\n                    {DUMMY_INDUSTRIES.map( title => (\r\n                        <div key={title.id} className=\"check-box-generic\">\r\n                            <Checkbox key={title.id} value={title.title}>\r\n                                {title.icon}{title.title}\r\n                            </Checkbox>\r\n                        </div>\r\n                        ))}\r\n                </Checkbox.Group>\r\n            </Row>\r\n            <Row className= 'other-input'>\r\n                <p>Have a custom industry in mind?</p>\r\n                <Search placeholder=\"Enter industry here\" allowClear enterButton=\"+\" onSearch={onTextSubmission} />\r\n            </Row>\r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default SponsorTargetIndustry;\r\n","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetHeadCount.js",["108"],"import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { Checkbox, Row, Col } from 'antd';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faUserFriends, faUsers, faHome, faLandmark, faBuilding } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport '../../index.css';\r\n\r\nconst DUMMY_HEAD_COUNT = [\r\n    {\r\n        id: '1',\r\n        title: '0 - 50',\r\n        icon: <FontAwesomeIcon icon={faUser} />\r\n    },\r\n    {\r\n        id: '2',\r\n        title: '51 - 100',\r\n        icon: <FontAwesomeIcon icon={faUserFriends} />\r\n    },\r\n    {\r\n        id: '3',\r\n        title: '101 - 250',\r\n        icon: <FontAwesomeIcon icon={faUsers} />\r\n    },\r\n    {\r\n        id: '4',\r\n        title: '251 -500',\r\n        icon: <FontAwesomeIcon icon={faHome} />\r\n    },\r\n    {\r\n        id: '5',\r\n        title: '501 -1000',\r\n        icon: <FontAwesomeIcon icon={faLandmark} />\r\n    },\r\n    {\r\n        id: '6',\r\n        title: 'more than 1000',\r\n        icon: <FontAwesomeIcon icon={faBuilding} />\r\n    }\r\n];\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: true\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nconst SponsorTargetHeadCount = props => {\r\n\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '', \r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid)\r\n    }, [id, value, isValid, formUpdateHandler]);\r\n\r\n\r\n\r\n    const clickHandler = checkedValues => {\r\n        console.log('Selected value', checkedValues);\r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: checkedValues\r\n        });\r\n    };\r\n\r\n    return( \r\n        <div className = 'response-field'>\r\n            <p>What company sizes of your target accounts?</p>\r\n            <Row >\r\n                <Checkbox.Group onChange={clickHandler} className=\"check-box-wrapper\">\r\n                    {DUMMY_HEAD_COUNT.map( title => (\r\n                        <div key={title.id} className=\"check-box-headcount\">\r\n                                <Checkbox value={title.title}>\r\n                                    {title.icon} {title.title }\r\n                                </Checkbox>\r\n                        </div>\r\n                    ))}\r\n                </Checkbox.Group>\r\n            </Row>\r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default SponsorTargetHeadCount;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetRegion.js",["109"],"import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { Checkbox, Row, Col } from 'antd';\r\n\r\nimport west from '../../shared/assets/west.png';\r\nimport mid_west from '../../shared/assets/mid_west.png';\r\nimport north_east from '../../shared/assets/north_east.png';\r\nimport south_east from '../../shared/assets/south_east.png';\r\nimport south_west from '../../shared/assets/south_west.png';\r\n\r\nimport '../../index.css';\r\n\r\nconst DUMMY_REGIONS = [\r\n    {\r\n        id: '1', \r\n        title: 'West',\r\n        icon: <img src={west} alt=\"West\" />\r\n    },\r\n    {\r\n        id: '2',\r\n        title: 'Mid-West',\r\n        icon: <img src={mid_west} alt=\"West\" />\r\n    },\r\n    {\r\n        id: '3',\r\n        title: 'South-West',\r\n        icon: <img src={south_west} alt=\"West\" />\r\n    },\r\n    {\r\n        id: '4',\r\n        title: 'North-East',\r\n        icon: <img src={north_east} alt=\"West\" />\r\n    },\r\n    {\r\n        id: '5',\r\n        title: 'South-East',\r\n        icon: <img src={south_east} alt=\"West\" />\r\n    }\r\n];\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: true\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nconst SponsorTargetRegion = props => {\r\n    \r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '', \r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid)\r\n    }, [id, value, isValid, formUpdateHandler]);\r\n\r\n    const clickHandler = checkedValues => {\r\n        console.log('Selected value', checkedValues);\r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: checkedValues\r\n        });\r\n    };\r\n\r\n    return(\r\n        <div className = 'response-field'>\r\n            <p>What US regions are your target accounts headquatered in?</p>\r\n            <Row >\r\n                <Checkbox.Group onChange={clickHandler} className=\"check-box-wrapper\">\r\n                    {DUMMY_REGIONS.map( title => (\r\n                        <div key={title.id} className=\"check-box-generic\">\r\n                                <Checkbox value={title.title}>\r\n                                    {title.icon} {title.title }\r\n                                </Checkbox>\r\n                        </div>\r\n                    ))}\r\n                </Checkbox.Group>\r\n            </Row>\r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default SponsorTargetRegion;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetDate.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetHost.js",["110","111"],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetTopic.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\pages\\SponsorRequest.js",["112","113"],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Auth\\Profile.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetUsersList.js",["114","115","116","117"],"import React, { useReducer, useEffect, useState } from 'react';\r\n\r\nimport '../../index.css';\r\n\r\nimport { Checkbox, Row, Col, Typography, Avatar, Spin, Popover, Button, Tag, Divider, Descriptions, List } from 'antd';\r\n\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nconst { Text } = Typography;\r\n\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: [... new Set([...state.value].concat(action.val))],\r\n                isValid: true\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst SponsorTargetUsersList = props => {\r\n    \r\n    const searchParams = props.value;\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [filteredUsers, setFilteredUsers] = useState();\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            setIsLoading(true);\r\n            try\r\n            {\r\n                console.log(\"searching on the following params: \",  searchParams);\r\n                const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/sponsors/userSearch', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type' : 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        jobTitles  : searchParams.roles.value,\r\n                        industries : searchParams.industries.value,\r\n                    })\r\n                });\r\n\r\n                const responseData = await response.json();\r\n\r\n                if(!response.ok){\r\n                    throw new Error(responseData.message);\r\n                }\r\n\r\n                console.log('Filtered users:', responseData)\r\n                setFilteredUsers(responseData.filteredUsers);\r\n                setIsLoading(false);\r\n            } catch (err) {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        sendRequest();\r\n    }, []);\r\n\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '', \r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid)\r\n    }, [id, value, isValid, formUpdateHandler]);\r\n\r\n    const clickHandler = checkedValues => {\r\n        console.log('Selected value', checkedValues);\r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: checkedValues\r\n        });\r\n    };\r\n\r\n    return(\r\n        <div className = 'response-field'> \r\n            <p>The following executives best match your target client parameters.</p>\r\n            <p className=\"text\"> Select up to 15 tech executives you would like to have attend your virtual round table you sponsor.</p>\r\n                \r\n            <Row>\r\n                {!isLoading && filteredUsers\r\n                    ? (\r\n                        <Checkbox.Group onChange={clickHandler} className= \"user-check-box-wrapper\">\r\n                            <List                                 \r\n                                dataSource ={filteredUsers}\r\n                                pagination={{\r\n                                    onChange: page => {console.log(page);},\r\n                                    pageSize: 4,\r\n                                    showSizeChanger : false\r\n                                }}\r\n                                renderItem={\r\n                                    item => (\r\n                                        <List.Item key={item.item[\"_id\"]} className=\"user-list-check-box\">\r\n                                            <Col span={2} className=\"check-box-style\">\r\n                                                <Checkbox value={ item.item[\"_id\"] }/>\r\n                                            </Col>\r\n                                            <Col span={6}>\r\n                                                <div className=\"avatar-wrapper\">\r\n                                                    <Avatar size={100} \r\n                                                        src= {item.item[\"Personal Photo\"] !== 'Image NA' && item.item[\"Personal Photo\"] }\r\n                                                        icon = { item.item[\"Personal Photo\"] === 'Image NA' && <UserOutlined /> }\r\n                                                            />\r\n                                                </div>\r\n                                                <div className=\"avatar-wrapper\">\r\n                                                    <Popover content={item.item[\"Personal Description\"]} title=\"Description\" overlayClassName=\"popover-content\">\r\n                                                        <Button type=\"primary\">Description</Button>\r\n                                                    </Popover>\r\n                                                </div>\r\n                                                <div className=\"avatar-wrapper\">\r\n                                                    <Popover content={item.item[\"Experience\"]} title=\"Experience\" overlayClassName=\"popover-content\">\r\n                                                        <Button>Experience</Button>\r\n                                                    </Popover>\r\n                                                </div>\r\n                                            </Col>\r\n                                            <Col span={17}>\r\n                                                <Row>\r\n                                                    <Text className=\"user-list-sub-heading\">{\" \" + item.item[\"First Name\"] + \" \" + item.item[\"Last Name\"]}</Text>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Text><span className=\"user-list-sub-heading\">Title</span>: {item.item.Position}</Text>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Text><span className=\"user-list-sub-heading\">Company:</span> {item.item.Company}</Text>\r\n                                                </Row>   \r\n                                                <Row>\r\n                                                    <Text><span className=\"user-list-sub-heading\">Location:</span> {item.item.State}</Text>\r\n                                                </Row>\r\n                                                <Row className=\"tag-wrapper\">\r\n                                                    <Tag >Est. Employees: {item.item[\"# of Employees\"]}</Tag>\r\n                                                </Row>\r\n                                                <Row className=\"tag-wrapper\">\r\n                                                    <Tag>Industry: {item.item[\"Industry\"]}</Tag>\r\n                                                </Row>\r\n                                                <Row className=\"tag-wrapper\">\r\n                                                    <Tag>Est. Revenue: {item.item[\"Estimated Revenues\"]}</Tag>\r\n                                                </Row> \r\n                                            </Col>\r\n                                        </List.Item>\r\n                                    )\r\n                                }\r\n                            />\r\n                        </Checkbox.Group>\r\n                    )\r\n                    : (\r\n                        <div className=\"user-list-spinner\">\r\n                            <Spin />\r\n                        </div>\r\n                    )\r\n                }\r\n            </Row>\r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default SponsorTargetUsersList;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorSummary.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":6,"column":10,"nodeType":"124","messageId":"125","endLine":6,"endColumn":26},{"ruleId":"122","severity":1,"message":"126","line":10,"column":9,"nodeType":"124","messageId":"125","endLine":10,"endColumn":13},{"ruleId":"122","severity":1,"message":"127","line":36,"column":55,"nodeType":"124","messageId":"125","endLine":36,"endColumn":64},{"ruleId":"128","severity":1,"message":"129","line":21,"column":21,"nodeType":"130","endLine":21,"endColumn":43},{"ruleId":"128","severity":1,"message":"129","line":31,"column":25,"nodeType":"130","endLine":31,"endColumn":79},{"ruleId":"128","severity":1,"message":"129","line":34,"column":25,"nodeType":"130","endLine":34,"endColumn":74},{"ruleId":"122","severity":1,"message":"131","line":3,"column":25,"nodeType":"124","messageId":"125","endLine":3,"endColumn":28},{"ruleId":"122","severity":1,"message":"131","line":3,"column":25,"nodeType":"124","messageId":"125","endLine":3,"endColumn":28},{"ruleId":"122","severity":1,"message":"131","line":3,"column":25,"nodeType":"124","messageId":"125","endLine":3,"endColumn":28},{"ruleId":"122","severity":1,"message":"131","line":3,"column":25,"nodeType":"124","messageId":"125","endLine":3,"endColumn":28},{"ruleId":"122","severity":1,"message":"131","line":5,"column":10,"nodeType":"124","messageId":"125","endLine":5,"endColumn":13},{"ruleId":"122","severity":1,"message":"132","line":5,"column":15,"nodeType":"124","messageId":"125","endLine":5,"endColumn":23},{"ruleId":"122","severity":1,"message":"133","line":7,"column":31,"nodeType":"124","messageId":"125","endLine":7,"endColumn":38},{"ruleId":"122","severity":1,"message":"134","line":185,"column":11,"nodeType":"124","messageId":"125","endLine":185,"endColumn":15},{"ruleId":"122","severity":1,"message":"135","line":5,"column":78,"nodeType":"124","messageId":"125","endLine":5,"endColumn":85},{"ruleId":"122","severity":1,"message":"136","line":5,"column":87,"nodeType":"124","messageId":"125","endLine":5,"endColumn":99},{"ruleId":"137","severity":1,"message":"138","line":17,"column":28,"nodeType":"139","messageId":"140","endLine":17,"endColumn":29,"fix":"141"},{"ruleId":"142","severity":1,"message":"143","line":62,"column":8,"nodeType":"144","endLine":62,"endColumn":10,"suggestions":"145"},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'LinkedinOutlined' is defined but never used.","Identifier","unusedVar","'Text' is assigned a value but never used.","'isLoading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Col' is defined but never used.","'Checkbox' is defined but never used.","'message' is defined but never used.","'prev' is assigned a value but never used.","'Divider' is defined but never used.","'Descriptions' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"148","text":"149"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchParams'. Either include it or remove the dependency array.","ArrayExpression",["150"],"no-global-assign","no-unsafe-negation",[476,477],"",{"desc":"151","fix":"152"},"Update the dependencies array to be: [searchParams]",{"range":"153","text":"154"},[2007,2009],"[searchParams]"]