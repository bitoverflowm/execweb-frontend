[{"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\index.js":"1","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorAuth.js":"2","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\components\\SponsorshipRequests.js":"3","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\pages\\AdminDashboard.js":"4","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\Home.js":"5","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Navigation\\MainNavigation.js":"6","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\App.js":"7","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Navigation\\NavLinks.js":"8","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\pages\\sponsorHome.js":"9","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\components\\SponsorshipRequestDetails.js":"10","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\reportWebVitals.js":"11","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetRole.js":"12","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetIndustry.js":"13","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetHeadCount.js":"14","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetRegion.js":"15","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetDate.js":"16","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetHost.js":"17","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetTopic.js":"18","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\pages\\SponsorRequest.js":"19","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Auth\\Profile.js":"20","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetUsersList.js":"21","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorSummary.js":"22"},{"size":532,"mtime":1613524438019,"results":"23","hashOfConfig":"24"},{"size":2274,"mtime":1614240217830,"results":"25","hashOfConfig":"24"},{"size":1786,"mtime":1612221303634,"results":"26","hashOfConfig":"24"},{"size":1879,"mtime":1612222265721,"results":"27","hashOfConfig":"24"},{"size":3735,"mtime":1614240582342,"results":"28","hashOfConfig":"24"},{"size":344,"mtime":1613999699360,"results":"29","hashOfConfig":"24"},{"size":2501,"mtime":1613684685775,"results":"30","hashOfConfig":"24"},{"size":777,"mtime":1613999329959,"results":"31","hashOfConfig":"24"},{"size":302,"mtime":1613735733091,"results":"32","hashOfConfig":"24"},{"size":1834,"mtime":1612225405328,"results":"33","hashOfConfig":"24"},{"size":362,"mtime":1611762160796,"results":"34","hashOfConfig":"24"},{"size":3262,"mtime":1614240379197,"results":"35","hashOfConfig":"24"},{"size":4570,"mtime":1613997185926,"results":"36","hashOfConfig":"24"},{"size":2628,"mtime":1613991964009,"results":"37","hashOfConfig":"24"},{"size":2610,"mtime":1613992396157,"results":"38","hashOfConfig":"24"},{"size":3351,"mtime":1614241232533,"results":"39","hashOfConfig":"24"},{"size":1917,"mtime":1613997947739,"results":"40","hashOfConfig":"24"},{"size":2404,"mtime":1613997853236,"results":"41","hashOfConfig":"24"},{"size":11345,"mtime":1614241422086,"results":"42","hashOfConfig":"24"},{"size":519,"mtime":1614000813437,"results":"43","hashOfConfig":"24"},{"size":7822,"mtime":1613995451977,"results":"44","hashOfConfig":"24"},{"size":1551,"mtime":1614000807456,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"wdh0zt",{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\index.js",[],["97","98"],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorAuth.js",["99","100","101"],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\components\\SponsorshipRequests.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\pages\\AdminDashboard.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\Home.js",["102","103","104","105","106","107"],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Navigation\\MainNavigation.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\App.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Navigation\\NavLinks.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\pages\\sponsorHome.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\admin\\components\\SponsorshipRequestDetails.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetRole.js",["108"],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetIndustry.js",["109"],"import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { Checkbox, Row, Col, Input, message } from 'antd';\r\n\r\nimport { FireTwoTone, ExperimentTwoTone, CodeTwoTone, BankTwoTone, LikeTwoTone, HeartTwoTone, RocketTwoTone, BookTwoTone, CarTwoTone, FilterTwoTone, FileExclamationTwoTone, MedicineBoxTwoTone } from '@ant-design/icons';\r\n\r\nimport '../../index.css';\r\n\r\nconst { Search } = Input;\r\n\r\nconst DUMMY_INDUSTRIES = [\r\n    {\r\n        id: 'i1',\r\n        title: 'Financial Services',\r\n        icon: <BankTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#FFB454\"/>\r\n    },\r\n    {\r\n        id: 'i2',\r\n        title: 'Technology',\r\n        icon: <CodeTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#AFE2DE\"/>\r\n    },\r\n    {\r\n        id: 'i3',\r\n        title: 'Pharma & Medicine',\r\n        icon: <ExperimentTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#FFB454\"/>\r\n    },\r\n    {\r\n        id: 'i4',\r\n        title: 'Energy',\r\n        icon: <FireTwoTone className=\"check-box-industry-icon\"/>\r\n    },\r\n    {\r\n        id: 'i5',\r\n        title: 'Non-Profit',\r\n        icon: <HeartTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#60C6BE\"/>\r\n    },\r\n    {\r\n        id: 'i6',\r\n        title: 'Military',\r\n        icon: <RocketTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#FFB454\"/>\r\n    },\r\n    {\r\n        id: 'i7',\r\n        title: 'Higher Education',\r\n        icon: <BookTwoTone className=\"check-box-industry-icon\"/>\r\n    },\r\n    {\r\n        id: 'i8',\r\n        title: 'Marketing & Advertisement',\r\n        icon: <LikeTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#60C6BE\"/>\r\n    },\r\n    {\r\n        id: 'i9',\r\n        title: 'Transportaion',\r\n        icon: <CarTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#60C6BE\"/>\r\n    },\r\n    {\r\n        id: 'i10',\r\n        title: 'Sanitation',\r\n        icon: <FilterTwoTone className=\"check-box-industry-icon\"/>\r\n    },\r\n    {\r\n        id: 'i11',\r\n        title: 'Legal Services',\r\n        icon: <FileExclamationTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#FFB454\"/>\r\n    },\r\n    {\r\n        id: 'i12',\r\n        title: 'Healthcare',\r\n        icon: <MedicineBoxTwoTone className=\"check-box-industry-icon\" twoToneColor=\"#60C6BE\"/>\r\n    }\r\n\r\n]; \r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: true\r\n            };\r\n        case 'TEXT':\r\n            return {\r\n                ...state,\r\n                textinput: action.val,\r\n                isValid: true \r\n            };  \r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nconst SponsorTargetIndustry = props => {\r\n\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '', \r\n        textinput: '',\r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, textinput, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid, textinput)\r\n    }, [id, value, textinput, isValid, formUpdateHandler]);\r\n\r\n    const clickHandler = checkedValues => {\r\n        console.log('Selected value', checkedValues);\r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: checkedValues\r\n        });\r\n    };\r\n\r\n    const onTextSubmission = value => {\r\n        console.log('newPosition text Entry', value);\r\n\r\n        dispatch({\r\n            type: 'TEXT',\r\n            val: value\r\n        });\r\n        message.success(value + ' Added to your submission!');\r\n    };\r\n\r\n    return(\r\n        <div className = 'response-field'>\r\n            <p>What industries are your target clients in?</p>\r\n            <Row>\r\n                <Checkbox.Group onChange={clickHandler} className=\"check-box-wrapper\">\r\n                    {DUMMY_INDUSTRIES.map( title => (\r\n                        <div key={title.id} className=\"check-box-generic\">\r\n                            <Checkbox key={title.id} value={title.title}>\r\n                                {title.icon}{title.title}\r\n                            </Checkbox>\r\n                        </div>\r\n                        ))}\r\n                </Checkbox.Group>\r\n            </Row>\r\n            <Row className= 'other-input'>\r\n                <p>Have a custom industry in mind?</p>\r\n                <Search placeholder=\"Enter industry here\" allowClear enterButton=\"+\" onSearch={onTextSubmission} />\r\n            </Row>\r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default SponsorTargetIndustry;\r\n","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetHeadCount.js",["110"],"import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { Checkbox, Row, Col } from 'antd';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faUserFriends, faUsers, faHome, faLandmark, faBuilding } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport '../../index.css';\r\n\r\nconst DUMMY_HEAD_COUNT = [\r\n    {\r\n        id: '1',\r\n        title: '0 - 50',\r\n        icon: <FontAwesomeIcon icon={faUser} />\r\n    },\r\n    {\r\n        id: '2',\r\n        title: '51 - 100',\r\n        icon: <FontAwesomeIcon icon={faUserFriends} />\r\n    },\r\n    {\r\n        id: '3',\r\n        title: '101 - 250',\r\n        icon: <FontAwesomeIcon icon={faUsers} />\r\n    },\r\n    {\r\n        id: '4',\r\n        title: '251 -500',\r\n        icon: <FontAwesomeIcon icon={faHome} />\r\n    },\r\n    {\r\n        id: '5',\r\n        title: '501 -1000',\r\n        icon: <FontAwesomeIcon icon={faLandmark} />\r\n    },\r\n    {\r\n        id: '6',\r\n        title: 'more than 1000',\r\n        icon: <FontAwesomeIcon icon={faBuilding} />\r\n    }\r\n];\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: true\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nconst SponsorTargetHeadCount = props => {\r\n\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '', \r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid)\r\n    }, [id, value, isValid, formUpdateHandler]);\r\n\r\n\r\n\r\n    const clickHandler = checkedValues => {\r\n        console.log('Selected value', checkedValues);\r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: checkedValues\r\n        });\r\n    };\r\n\r\n    return( \r\n        <div className = 'response-field'>\r\n            <p>What company sizes of your target accounts?</p>\r\n            <Row >\r\n                <Checkbox.Group onChange={clickHandler} className=\"check-box-wrapper\">\r\n                    {DUMMY_HEAD_COUNT.map( title => (\r\n                        <div key={title.id} className=\"check-box-headcount\">\r\n                                <Checkbox value={title.title}>\r\n                                    {title.icon} {title.title }\r\n                                </Checkbox>\r\n                        </div>\r\n                    ))}\r\n                </Checkbox.Group>\r\n            </Row>\r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default SponsorTargetHeadCount;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetRegion.js",["111"],"import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { Checkbox, Row, Col } from 'antd';\r\n\r\nimport west from '../../shared/assets/west.png';\r\nimport mid_west from '../../shared/assets/mid_west.png';\r\nimport north_east from '../../shared/assets/north_east.png';\r\nimport south_east from '../../shared/assets/south_east.png';\r\nimport south_west from '../../shared/assets/south_west.png';\r\n\r\nimport '../../index.css';\r\n\r\nconst DUMMY_REGIONS = [\r\n    {\r\n        id: '1', \r\n        title: 'West',\r\n        icon: <img src={west} alt=\"West\" />\r\n    },\r\n    {\r\n        id: '2',\r\n        title: 'Mid-West',\r\n        icon: <img src={mid_west} alt=\"West\" />\r\n    },\r\n    {\r\n        id: '3',\r\n        title: 'South-West',\r\n        icon: <img src={south_west} alt=\"West\" />\r\n    },\r\n    {\r\n        id: '4',\r\n        title: 'North-East',\r\n        icon: <img src={north_east} alt=\"West\" />\r\n    },\r\n    {\r\n        id: '5',\r\n        title: 'South-East',\r\n        icon: <img src={south_east} alt=\"West\" />\r\n    }\r\n];\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: true\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nconst SponsorTargetRegion = props => {\r\n    \r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '', \r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid)\r\n    }, [id, value, isValid, formUpdateHandler]);\r\n\r\n    const clickHandler = checkedValues => {\r\n        console.log('Selected value', checkedValues);\r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: checkedValues\r\n        });\r\n    };\r\n\r\n    return(\r\n        <div className = 'response-field'>\r\n            <p>What US regions are your target accounts headquatered in?</p>\r\n            <Row >\r\n                <Checkbox.Group onChange={clickHandler} className=\"check-box-wrapper\">\r\n                    {DUMMY_REGIONS.map( title => (\r\n                        <div key={title.id} className=\"check-box-generic\">\r\n                                <Checkbox value={title.title}>\r\n                                    {title.icon} {title.title }\r\n                                </Checkbox>\r\n                        </div>\r\n                    ))}\r\n                </Checkbox.Group>\r\n            </Row>\r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default SponsorTargetRegion;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetDate.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetHost.js",["112","113"],"import React, { useReducer, useEffect } from 'react';\r\n\r\nimport '../../index.css';\r\n\r\nimport { Col, Checkbox, Typography, Radio } from 'antd';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: true\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nconst SponsorTargetHost = props => {\r\n\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '', \r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid)\r\n    }, [id, value, isValid, formUpdateHandler]);\r\n\r\n    const clickHandler = checkedValues => {\r\n        console.log('Selected value', checkedValues);\r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: checkedValues.target.value\r\n        });\r\n    };\r\n\r\n    return(\r\n        <div className = 'response-field'>\r\n            <p>Do you want us to source a moderator for the roundtable? </p>\r\n            <p>Or would you prefer to ask one of your clients' tech execs to moderate?</p>\r\n            <Radio.Group onChange={clickHandler}>\r\n                <div span={12} className=\"check-box-generic\">\r\n                    <Radio value={1}>                               \r\n                        <Text strong>I have my own host. </Text>\r\n                    </Radio>\r\n                </div>\r\n                <div span={12} className=\"check-box-generic\">\r\n                    <Radio value={0}>\r\n                        <Text strong>Please provide me with a host. </Text> \r\n                    </Radio>\r\n                </div>\r\n            </Radio.Group> \r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default SponsorTargetHost;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetTopic.js",[],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\pages\\SponsorRequest.js",["114","115"],"C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\shared\\components\\Auth\\Profile.js",["116"],"import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Card, Avatar } from 'antd';\r\n\r\nconst { Meta } = Card;\r\n\r\n\r\nconst Profile = () => {\r\n  const { user, isAuthenticated, isLoading } = useAuth0();\r\n\r\n  return (\r\n    user && (\r\n      <Card loading={isLoading}>\r\n        <Meta \r\n          title = {user.name}\r\n          avatar = {<Avatar src={user.picture} size=\"large\"/>}\r\n          description = {user.email}\r\n        />        \r\n      </Card>\r\n    ) \r\n  );\r\n};\r\n\r\nexport default Profile;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorTargetUsersList.js",["117","118","119","120"],"import React, { useReducer, useEffect, useState } from 'react';\r\n\r\nimport '../../index.css';\r\n\r\nimport { Checkbox, Row, Col, Typography, Avatar, Spin, Popover, Button, Tag, Divider, Descriptions, List } from 'antd';\r\n\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nconst { Text } = Typography;\r\n\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK':\r\n            return {\r\n                ...state,\r\n                value: [... new Set([...state.value].concat(action.val))],\r\n                isValid: true\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst SponsorTargetUsersList = props => {\r\n    \r\n    const searchParams = props.value;\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [filteredUsers, setFilteredUsers] = useState();\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            setIsLoading(true);\r\n            try\r\n            {\r\n                console.log(\"searching on the following params: \",  searchParams);\r\n                const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/sponsors/userSearch', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type' : 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        jobTitles  : searchParams.roles.value,\r\n                        industries : searchParams.industries.value,\r\n                    })\r\n                });\r\n\r\n                const responseData = await response.json();\r\n\r\n                if(!response.ok){\r\n                    throw new Error(responseData.message);\r\n                }\r\n\r\n                console.log('Filtered users:', responseData)\r\n                setFilteredUsers(responseData.filteredUsers);\r\n                setIsLoading(false);\r\n            } catch (err) {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        sendRequest();\r\n    }, []);\r\n\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: '', \r\n        isValid: false\r\n    });\r\n\r\n    const { id, formUpdateHandler } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        formUpdateHandler(id, value, isValid)\r\n    }, [id, value, isValid, formUpdateHandler]);\r\n\r\n    const clickHandler = checkedValues => {\r\n        console.log('Selected value', checkedValues);\r\n        dispatch({\r\n            type: 'CLICK', \r\n            val: checkedValues\r\n        });\r\n    };\r\n\r\n    return(\r\n        <div className = 'response-field'> \r\n            <p>The following executives best match your target client parameters.</p>\r\n            <p className=\"text\"> Select up to 15 tech executives you would like to have attend your virtual round table you sponsor.</p>\r\n                \r\n            <Row>\r\n                {!isLoading && filteredUsers\r\n                    ? (\r\n                        <Checkbox.Group onChange={clickHandler} className= \"user-check-box-wrapper\">\r\n                            <List                                 \r\n                                dataSource ={filteredUsers}\r\n                                pagination={{\r\n                                    onChange: page => {console.log(page);},\r\n                                    pageSize: 4,\r\n                                    showSizeChanger : false\r\n                                }}\r\n                                renderItem={\r\n                                    item => (\r\n                                        <List.Item key={item.item[\"_id\"]} className=\"user-list-check-box\">\r\n                                            <Col span={2} className=\"check-box-style\">\r\n                                                <Checkbox value={ item.item[\"_id\"] }/>\r\n                                            </Col>\r\n                                            <Col span={6}>\r\n                                                <div className=\"avatar-wrapper\">\r\n                                                    <Avatar size={100} \r\n                                                        src= {item.item[\"Personal Photo\"] !== 'Image NA' && item.item[\"Personal Photo\"] }\r\n                                                        icon = { item.item[\"Personal Photo\"] === 'Image NA' && <UserOutlined /> }\r\n                                                            />\r\n                                                </div>\r\n                                                <div className=\"avatar-wrapper\">\r\n                                                    <Popover content={item.item[\"Personal Description\"]} title=\"Description\" overlayClassName=\"popover-content\">\r\n                                                        <Button type=\"primary\">Description</Button>\r\n                                                    </Popover>\r\n                                                </div>\r\n                                                <div className=\"avatar-wrapper\">\r\n                                                    <Popover content={item.item[\"Experience\"]} title=\"Experience\" overlayClassName=\"popover-content\">\r\n                                                        <Button>Experience</Button>\r\n                                                    </Popover>\r\n                                                </div>\r\n                                            </Col>\r\n                                            <Col span={17}>\r\n                                                <Row>\r\n                                                    <Text className=\"user-list-sub-heading\">{\" \" + item.item[\"First Name\"] + \" \" + item.item[\"Last Name\"]}</Text>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Text><span className=\"user-list-sub-heading\">Title</span>: {item.item.Position}</Text>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Text><span className=\"user-list-sub-heading\">Company:</span> {item.item.Company}</Text>\r\n                                                </Row>   \r\n                                                <Row>\r\n                                                    <Text><span className=\"user-list-sub-heading\">Location:</span> {item.item.State}</Text>\r\n                                                </Row>\r\n                                                <Row className=\"tag-wrapper\">\r\n                                                    <Tag >Est. Employees: {item.item[\"# of Employees\"]}</Tag>\r\n                                                </Row>\r\n                                                <Row className=\"tag-wrapper\">\r\n                                                    <Tag>Industry: {item.item[\"Industry\"]}</Tag>\r\n                                                </Row>\r\n                                                <Row className=\"tag-wrapper\">\r\n                                                    <Tag>Est. Revenue: {item.item[\"Estimated Revenues\"]}</Tag>\r\n                                                </Row> \r\n                                            </Col>\r\n                                        </List.Item>\r\n                                    )\r\n                                }\r\n                            />\r\n                        </Checkbox.Group>\r\n                    )\r\n                    : (\r\n                        <div className=\"user-list-spinner\">\r\n                            <Spin />\r\n                        </div>\r\n                    )\r\n                }\r\n            </Row>\r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default SponsorTargetUsersList;","C:\\Users\\rthap\\Documents\\ExecWeb\\execweb-frontend\\src\\sponsors\\components\\SponsorSummary.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":6,"column":10,"nodeType":"127","messageId":"128","endLine":6,"endColumn":26},{"ruleId":"125","severity":1,"message":"129","line":10,"column":9,"nodeType":"127","messageId":"128","endLine":10,"endColumn":13},{"ruleId":"125","severity":1,"message":"130","line":36,"column":55,"nodeType":"127","messageId":"128","endLine":36,"endColumn":64},{"ruleId":"125","severity":1,"message":"131","line":4,"column":33,"nodeType":"127","messageId":"128","endLine":4,"endColumn":44},{"ruleId":"125","severity":1,"message":"132","line":6,"column":10,"nodeType":"127","messageId":"128","endLine":6,"endColumn":16},{"ruleId":"133","severity":1,"message":"134","line":23,"column":21,"nodeType":"135","endLine":23,"endColumn":43},{"ruleId":"136","severity":1,"message":"137","line":26,"column":29,"nodeType":"135","endLine":26,"endColumn":65},{"ruleId":"133","severity":1,"message":"134","line":33,"column":25,"nodeType":"135","endLine":33,"endColumn":79},{"ruleId":"133","severity":1,"message":"134","line":36,"column":25,"nodeType":"135","endLine":36,"endColumn":74},{"ruleId":"125","severity":1,"message":"138","line":3,"column":25,"nodeType":"127","messageId":"128","endLine":3,"endColumn":28},{"ruleId":"125","severity":1,"message":"138","line":3,"column":25,"nodeType":"127","messageId":"128","endLine":3,"endColumn":28},{"ruleId":"125","severity":1,"message":"138","line":3,"column":25,"nodeType":"127","messageId":"128","endLine":3,"endColumn":28},{"ruleId":"125","severity":1,"message":"138","line":3,"column":25,"nodeType":"127","messageId":"128","endLine":3,"endColumn":28},{"ruleId":"125","severity":1,"message":"138","line":5,"column":10,"nodeType":"127","messageId":"128","endLine":5,"endColumn":13},{"ruleId":"125","severity":1,"message":"139","line":5,"column":15,"nodeType":"127","messageId":"128","endLine":5,"endColumn":23},{"ruleId":"125","severity":1,"message":"140","line":7,"column":31,"nodeType":"127","messageId":"128","endLine":7,"endColumn":38},{"ruleId":"125","severity":1,"message":"141","line":185,"column":11,"nodeType":"127","messageId":"128","endLine":185,"endColumn":15},{"ruleId":"125","severity":1,"message":"142","line":9,"column":17,"nodeType":"127","messageId":"128","endLine":9,"endColumn":32},{"ruleId":"125","severity":1,"message":"143","line":5,"column":78,"nodeType":"127","messageId":"128","endLine":5,"endColumn":85},{"ruleId":"125","severity":1,"message":"144","line":5,"column":87,"nodeType":"127","messageId":"128","endLine":5,"endColumn":99},{"ruleId":"145","severity":1,"message":"146","line":17,"column":28,"nodeType":"147","messageId":"148","endLine":17,"endColumn":29,"fix":"149"},{"ruleId":"150","severity":1,"message":"151","line":62,"column":8,"nodeType":"152","endLine":62,"endColumn":10,"suggestions":"153"},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'LinkedinOutlined' is defined but never used.","Identifier","unusedVar","'Text' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'faInstagram' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Col' is defined but never used.","'Checkbox' is defined but never used.","'message' is defined but never used.","'prev' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'Divider' is defined but never used.","'Descriptions' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"156","text":"157"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchParams'. Either include it or remove the dependency array.","ArrayExpression",["158"],"no-global-assign","no-unsafe-negation",[476,477],"",{"desc":"159","fix":"160"},"Update the dependencies array to be: [searchParams]",{"range":"161","text":"162"},[2007,2009],"[searchParams]"]